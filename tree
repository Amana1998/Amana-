{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Postman API",
    "description" : "The Postman API allows you to programmatically access data stored in Postman account with ease.\n\nThe easiest way to get started with the API is to click the **fork** button to fork this collection to your own workspace and use Postman to send requestsss.\n\n\n# Overview\n\n1. You need a valid <a href=\"#authentication\">API Key</a> to send requests to the API endpoints. You can get your key from the [integrations dashboard](https://go.postman.co/settings/me/api-keys).\n\n1. The API has an access <a href=\"#rate-limits\">rate limit</a> applied to it.\n\n1. The Postman API will only respond to secured communication done over HTTPS. HTTP requests will be sent a `301` redirect to corresponding HTTPS resources.\n\n1. Response to every request is sent in [JSON format](https://en.wikipedia.org/wiki/JSON). In case the API request results in an error, it is represented by an `\"error\": {}` key in the JSON response.\n\n1. The request method (verb) determines the nature of action you intend to perform. A request made using the `GET` method implies that you want to fetch something from Postman, and `POST` implies you want to save something new to Postman.\n\n1. The API calls will respond with appropriate [HTTP status codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) for all requests. Within Postman Client, when a response is received, the status code is highlighted and is accompanied by a help text that indicates the possible meaning of the response code. A `200 OK` indicates all went well, while `4XX` or `5XX` response codes indicate an error from the requesting client or our API servers respectively.\n\n1. Individual resources in your Postman Account is accessible using its unique id (`uid`). The `uid` is a simple concatenation of the resource owner's user-id and the resource-id. For example, a collection's `uid` is `{{owner_id}}-{{collection_id}}`.\n\n# Authentication\n\nAn API Key is required to be sent as part of every request to the Postman API, in the form of an `X-Api-Key` request header.\n\n> If you do not have an API Key, you can easily generate one by heading over to the [Postman Integrations Dashboard](https://go.postman.co/integrations/services/pm_pro_api).\n\nAn API Key tells our API server that the request it received came from you. Everything that you have access to in Postman is accessible with an API Key that is generated by you.\n\nFor ease of use inside Postman, you could store your API key in an [environment variable](https://www.getpostman.com/docs/environments) called `postman_api_key` and this [Collection](https://www.getpostman.com/docs/collections) will automatically use it to make API calls.\n\n## API Key related error response\n\nIf an API Key is missing, malformed, or invalid, you will receive a `401 Unauthorised` response code and the following JSON response:\n\n```\n{\n  \"error\": { \n    \"name\": \"AuthenticationError\",\n    \"message\": \"API Key missing. Every request requires an API Key to be sent.\"\n  }\n}\n```\n\n## Using the API Key as a query parameter\n\nEvery request that accepts API Key as `X-Api-Key` request header, also accepts the key when sent as `apikey` URL query parameter.\n\nAPI key sent as part of the header has a higher priority in case you send the key using both request header and query parameter.\n\n\n# Rate Limits\n\nAPI access rate limits are applied at a per-key basis in unit time. Access to the API using a key is limited to **60 requests per minute**. In addition, every API response is accompanied by the following set of headers to identify the status of your consumption.\n\n\n| Header                  | Description |\n|-------------------------|-------------|\n| `X-RateLimit-Limit`     | The maximum number of requests that the consumer is permitted to make per minute. |\n| `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |\n| `X-RateLimit-Reset`     | The time at which the current rate limit window resets in UTC epoch seconds. |\n\n\nOnce you hit the rate limit, you will receive a response similar to the following JSON, with a status code of `429 Too Many Requests`.\n\n```json\n{\n  \"error\": {\n    \"name\": \"rateLimitError\",\n    \"message\": \"Rate Limit exceeded. Please retry at 1465452702843\"\n  }\n}\n```\n\n\n# Support\n\nFor help regarding accessing the Postman API, feel free to discuss it in our [Discourse Community](https://community.getpostman.com). You can also drop in a line at [help@getpostman.com](mailto:help@getpostman.com).\n\nIn the event you receive a `503` response from our servers, it implies that we have hit an unexpected spike in API access traffic and would usually be operational within the next 5 minutes. If the outage persists, or your receive any other form of `5XX` error, kindly let us know.\n\n\n# Terms of Use\n\nFor information on API terms of use and privacy, refer to our terms at [http://postman.com/legal/terms/](http://postman.com/legal/terms/) and our privacy policy at [https://www.postman.com/legal/privacy-policy/](https://www.postman.com/legal/privacy-policy/).\n\n\n# API Reference",
    "contact" : { },
    "version" : "1.20.0",
    "x-apisguru-categories" : [ "developer_tools" ],
    "x-logo" : {
      "url" : "https://www.vectorlogo.zone/logos/getpostman/getpostman-ar21.svg"
    },
    "x-origin" : [ {
      "format" : "openapi",
      "url" : "https://gist.githubusercontent.com/MikeRalphson/f5dd7e7e712a4f2caa8f1783f1053dbc/raw/05fb7ae8b877b37d93413a0b8183bf60c2e1bdfe/postman-api.yaml",
      "version" : "3.0"
    } ],
    "x-providerName" : "getpostman.com"
  },
  "servers" : [ {
    "url" : "https://api.getpostman.com"
  } ],
  "tags" : [ {
    "name" : "Collections"
  }, {
    "name" : "Environments"
  }, {
    "name" : "Mocks"
  }, {
    "name" : "Monitors"
  }, {
    "name" : "Workspaces"
  }, {
    "name" : "User"
  }, {
    "name" : "Import"
  }, {
    "name" : "API"
  }, {
    "name" : "API Version",
    "description" : "This folder contains the requests around API versions."
  }, {
    "name" : "Schema",
    "description" : "This folder contains all the endpoints related to Schemas."
  }, {
    "name" : "Relations",
    "description" : "This contains requests related to relations. \n\nRelations can be of the following types: \n- `contracttest`\n- `integrationtest`\n- `documentation`\n- `testsuite`\n- `environment`\n- `mock`\n- `monitor`"
  }, {
    "name" : "Webhooks",
    "description" : "With webhooks you can trigger a collection at a specific time with your own custom payload which can then be accessed in the collection.\n\nLearn more about webhooks in our [learning center](https://learning.postman.com/docs/designing-and-developing-your-api/monitoring-your-api/integrations-for-alerts/)."
  } ],
  "paths" : {
    "/apis" : {
      "get" : {
        "tags" : [ "API" ],
        "summary" : "Get all APIs",
        "description" : "This call fetches all the APIs present in the specified workspace\n\nResponse contains an array named `apis` which would contain all the details of APIs present in the workspace.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "getAllApIs",
        "parameters" : [ {
          "name" : "workspace",
          "in" : "query",
          "description" : "Only return APIs that are inside the given workspace.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{workspaceId}}"
          }
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "Only return APIs that have been updated after this time. Time is represented using the ISO 8601 date and time format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{since}}"
          }
        }, {
          "name" : "until",
          "in" : "query",
          "description" : "Only return APIs that have been updated before this time. Time is represented using the ISO 8601 date and time format.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{until}}"
          }
        }, {
          "name" : "createdBy",
          "in" : "query",
          "description" : "Only return APIs that have been created by the user ID represented by the given value.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{createdBy}}"
          }
        }, {
          "name" : "updatedBy",
          "in" : "query",
          "description" : "Only return APIs that have been updated by the user ID represented by the given value.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{updatedBy}}"
          }
        }, {
          "name" : "isPublic",
          "in" : "query",
          "description" : "Only return APIs with the corresponding privacy state. Public APIs have the isPublic value true; private APIs have the isPublic value false.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{isPublic}}"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Only return APIs whose name includes the given value. Matching is case insensitive.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{name}}"
          }
        }, {
          "name" : "summary",
          "in" : "query",
          "description" : "Only return APIs whose summary includes the given value. Matching is case insensitive.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{summary}}"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "description" : "Only return APIs whose description includes the given value. Matching is case insensitive.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{description}}"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "The value of sort can be one of the names of the fields included in the response.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{sort}}"
          }
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "The sorting direction, which can be ascending or descending. The value can be asc to specify an ascending direction or desc to specify a descending direction. If none is specified, the default sorting direction is descending for timestamp and numeric fields and ascending otherwise. An ID is not considered a numeric field.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{direction}}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : ""
          }
        }
      },
      "post" : {
        "tags" : [ "API" ],
        "summary" : "Create API",
        "description" : "This call creates a new API with a default API Version.  \n\nRequest body should contain an `api` object which should atleast have a property `name`.\n\nResponse contains an `api` object with all the details related to the created API, namely, `id`, `name`, `summary`, `description`, etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "createApi",
        "parameters" : [ {
          "name" : "workspace",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{workspaceId}}"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/apis_body"
              },
              "example" : {
                "api" : {
                  "description" : "This is description.",
                  "name" : "Sync Service API",
                  "summary" : "This is supposed to be a short summary."
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Create API",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                },
                "examples" : {
                  "Create API" : {
                    "value" : {
                      "api" : {
                        "createdAt" : "2019-02-12 19:34:49",
                        "createdBy" : "5665",
                        "description" : "This is supposed to handle markdown *descriptions*.",
                        "id" : "387c2863-6ee3-4a56-8210-225f774edade",
                        "name" : "Sync API",
                        "summary" : "This is a summary",
                        "updatedAt" : "2019-02-12 19:34:49"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}" : {
      "get" : {
        "tags" : [ "API" ],
        "summary" : "Single API",
        "description" : "This call fetches a single API having the specified id.\n\nResponse contains an `api` object with all the details related to the queried API, namely, `id`, `name`, `summary`, `description` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "singleApi",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get single API",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                },
                "examples" : {
                  "Get single API" : {
                    "value" : {
                      "api" : {
                        "createdAt" : "2019-02-12 19:34:49",
                        "createdBy" : "5665",
                        "description" : "This is a description.This is a description.",
                        "id" : "387c2863-6ee3-4a56-8210-225f774edade",
                        "name" : "Sync API",
                        "summary" : "This is a summary",
                        "updatedAt" : "2019-02-12 19:34:49"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "API" ],
        "summary" : "Update an API",
        "description" : "This call updates an existing API .  \n\nRequest body should contain an `api` object which should have the fields to be updated. Only `name`, `summary` and `description` fields can be edited for an API.\n\nResponse contains an `api` object with all the details related to the created API, namely, `id`, `name`, `summary`, `description` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "updateAnApi",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/apis_apiId_body"
              },
              "example" : {
                "api" : {
                  "description" : "This is an updated Description",
                  "name" : "New name"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update an API",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                },
                "examples" : {
                  "Update an API" : {
                    "value" : {
                      "api" : {
                        "createdAt" : "2019-02-12 19:34:49",
                        "createdBy" : "5665",
                        "description" : "This is a description.",
                        "id" : "387c2863-6ee3-4a56-8210-225f774edade",
                        "name" : "Sync API",
                        "summary" : "This is a summary",
                        "updatedAt" : "2019-02-12 19:34:49"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "API" ],
        "summary" : "Delete an API",
        "description" : "This call deletes an existing API having the specified id.  \n\nResponse contains an `api` object with `id` of the API which was deleted.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "deleteAnApi",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Delete an API",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                },
                "examples" : {
                  "Delete an API" : {
                    "value" : {
                      "api" : {
                        "id" : "387c2863-6ee3-4a56-8210-225f774edade"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions" : {
      "get" : {
        "tags" : [ "API", "API Version" ],
        "summary" : "Get All API Versions",
        "description" : "This call fetches details about the all the API Versions in the specified API.\n\nThe response will contain an array `versions` object which would be a list of all the API Version along with their details.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "getAllApiVersions",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get All API versions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_4"
                },
                "examples" : {
                  "Get All API versions" : {
                    "value" : {
                      "versions" : [ {
                        "createdAt" : "2019-02-12 19:34:49",
                        "createdBy" : "5665",
                        "description" : "Description",
                        "id" : "024660a6-c837-46ca-91d8-7e8dd7c669de",
                        "name" : "0.1",
                        "summary" : "Summary",
                        "updatedAt" : "2019-02-12 19:34:49"
                      }, {
                        "createdAt" : "2019-02-12 19:34:49",
                        "createdBy" : "5665",
                        "description" : "Description",
                        "id" : "00932d3b-20f1-454f-a77e-38b4023163ea",
                        "name" : "0.2",
                        "summary" : "Summary",
                        "updatedAt" : "2019-02-12 19:34:49"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "API", "API Version" ],
        "summary" : "Create API Version",
        "description" : "This call creates a new API version in the specified API.  \n\nRequest body should contain a `version` object which should have fields:\n\n<table>\n<tr>\n  <td>name</td>\n  <td>Required. Name of the API Version</td>\n</tr>\n<tr>\n  <td>source</td>\n  <td>\n    If specified, it will copy the contents of the specified api version to create a new api verison.\n    <table>\n      <tr>\n        <td>id</td>\n        <td>Required. Id of the apiversion from where the details are to be copied</td>\n      </tr>\n      <tr>\n        <td>schema</td>\n        <td>Boolean. If true then copies the schema from the specified api version</td>\n      </tr>\n      <tr>\n        <td>relations</td>\n        <td>Object. {\"&lt;relationType&gt;\": true/false}.  \n          Allowed relation types are `mock`, `monitor`, `documentation`, `contracttest`, `integrationtest`, `testsuite`, `environment`\n        Relation types which should be copied over to the new api verison</td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n\nResponse contains a `version` object with all the details related to the created API Version, namely, `id`, `name`, `api`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "createApiVersion",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/apiId_versions_body"
              },
              "example" : {
                "version" : {
                  "name" : "1.0",
                  "source" : {
                    "id" : "{{apiVersionId}}",
                    "relations" : {
                      "documentation" : true,
                      "mock" : true,
                      "monitor" : true
                    },
                    "schema" : true
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Create API version",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_5"
                },
                "examples" : {
                  "Create API version" : {
                    "value" : {
                      "version" : {
                        "api" : "2b95d07c-8379-4bd1-924f-e7e1af185284",
                        "id" : "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                        "name" : "1.0"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}" : {
      "get" : {
        "tags" : [ "API", "API Version" ],
        "summary" : "Get an API Version",
        "description" : "This call fetches details about the specified API Version.\n\nThe response will contain a `version` object which would contain all the details of the API Version.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "getAnApiVersion",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get an API version",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_6"
                },
                "examples" : {
                  "Get an API version" : {
                    "value" : {
                      "version" : {
                        "api" : "06e41ca3-8bea-4bc5-a726-70338b9f1940",
                        "createdAt" : "2019-07-21T16:31:15.000Z",
                        "createdBy" : "5665",
                        "id" : "03c17f53-7e2e-427d-b55a-006b244f29ff",
                        "name" : "0.1",
                        "schema" : [ "3484cd1e-e00d-4c39-aea4-539663afe898" ],
                        "updatedAt" : "2019-07-21T16:31:15.000Z",
                        "updatedBy" : "5665"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "API", "API Version" ],
        "summary" : "Update an API Version",
        "description" : "This call updates an existing API Version.  \n\nRequest body should contain a `version` object with the fields which need to be updated. Only field which can be updated is `name`.\n\nResponse contains a `version` object with all the details related to the created API Version, namely, `id`, `name`, `api` etc.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "updateAnApiVersion",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/versions_apiVersionId_body"
              },
              "example" : {
                "version" : {
                  "name" : "2.0"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update an API version",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_7"
                },
                "examples" : {
                  "Update an API version" : {
                    "value" : {
                      "version" : {
                        "api" : "2b95d07c-8379-4bd1-924f-e7e1af185284",
                        "createdAt" : "2019-07-26T11:24:15.000Z",
                        "createdBy" : "12",
                        "id" : "d71cf403-c549-4c7c-9dc6-a6a105acf67c",
                        "name" : "2.0",
                        "updatedAt" : "2019-08-09T09:27:36.000Z",
                        "updatedBy" : "5665"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "API", "API Version" ],
        "summary" : "Delete an API Version",
        "description" : "This call deletes an existing API Version having the specified id.  \n\nResponse contains an `version` object with `id` of the API Version which was deleted.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "deleteAnApiVersion",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Delete an API version",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_8"
                },
                "examples" : {
                  "Delete an API version" : {
                    "value" : {
                      "version" : {
                        "id" : "03c17f53-7e2e-427d-b55a-006b244f29ff"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/contracttest" : {
      "get" : {
        "tags" : [ "API", "Relations" ],
        "summary" : "Get contract test relations",
        "description" : "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "getContractTestRelations",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get contract test relations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_9"
                },
                "examples" : {
                  "Get contract test relations" : {
                    "value" : {
                      "contracttest" : [ {
                        "collectionId" : "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                        "id" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                        "name" : "C test",
                        "updatedAt" : "2019-08-29T10:18:11.000Z"
                      }, {
                        "collectionId" : "7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725",
                        "id" : "521b0486-ab91-4d3a-9189-43c9380a0533",
                        "name" : "C1",
                        "updatedAt" : "2019-08-29T11:40:39.000Z"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/documentation" : {
      "get" : {
        "tags" : [ "API", "Relations" ],
        "summary" : "Get  documentation relations",
        "description" : "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "getDocumentationRelations",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get documentation relations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_10"
                },
                "examples" : {
                  "Get documentation relations" : {
                    "value" : {
                      "documentation" : [ {
                        "collectionId" : "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                        "id" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                        "name" : "C test",
                        "updatedAt" : "2019-08-29T10:18:11.000Z"
                      }, {
                        "collectionId" : "7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725",
                        "id" : "521b0486-ab91-4d3a-9189-43c9380a0533",
                        "name" : "C1",
                        "updatedAt" : "2019-08-29T11:40:39.000Z"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/environment" : {
      "get" : {
        "tags" : [ "API", "Relations" ],
        "summary" : "Get environment relations",
        "description" : "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "getEnvironmentRelations",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get environment relations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_11"
                },
                "examples" : {
                  "Get environment relations" : {
                    "value" : {
                      "environment" : [ {
                        "id" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                        "name" : "C test",
                        "updatedAt" : "2019-08-29T10:18:11.000Z"
                      }, {
                        "id" : "521b0486-ab91-4d3a-9189-43c9380a0533",
                        "name" : "C1",
                        "updatedAt" : "2019-08-29T11:40:39.000Z"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/integrationtest" : {
      "get" : {
        "tags" : [ "API", "Relations" ],
        "summary" : "Get integration test relations",
        "description" : "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "getIntegrationTestRelations",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get integration test relations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_12"
                },
                "examples" : {
                  "Get integration test relations" : {
                    "value" : {
                      "integrationtest" : [ {
                        "collectionId" : "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                        "id" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                        "name" : "C test",
                        "updatedAt" : "2019-08-29T10:18:11.000Z"
                      }, {
                        "collectionId" : "7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725",
                        "id" : "521b0486-ab91-4d3a-9189-43c9380a0533",
                        "name" : "C1",
                        "updatedAt" : "2019-08-29T11:40:39.000Z"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/monitor" : {
      "get" : {
        "tags" : [ "API", "Relations" ],
        "summary" : "Get monitor relations",
        "description" : "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "getMonitorRelations",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get monitor relations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_13"
                },
                "examples" : {
                  "Get monitor relations" : {
                    "value" : {
                      "monitor" : [ {
                        "id" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                        "monitorId" : "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                        "name" : "C test",
                        "updatedAt" : "2019-08-29T10:18:11.000Z"
                      }, {
                        "id" : "521b0486-ab91-4d3a-9189-43c9380a0533",
                        "monitorId" : "7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725",
                        "name" : "C1",
                        "updatedAt" : "2019-08-29T11:40:39.000Z"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/relations" : {
      "get" : {
        "tags" : [ "API", "Relations" ],
        "summary" : "Get linked relations",
        "description" : "This call fetches all the relations which are linked to the specified API version along with their details.\n\nThe response will contain a `relations` object which lists all the relation types which are linked to the API version. Each of the relation type will be an object which details the relations of this type. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "getLinkedRelations",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get linked relations for an API version",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_14"
                },
                "examples" : {
                  "Get linked relations for an API version" : {
                    "value" : {
                      "relations" : {
                        "contracttest" : {
                          "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2" : {
                            "id" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                            "name" : "C test",
                            "updatedAt" : "2019-08-29T10:18:11.000Z"
                          }
                        },
                        "integrationtest" : {
                          "521b0486-ab91-4d3a-9189-43c9380a0533" : {
                            "id" : "521b0486-ab91-4d3a-9189-43c9380a0533",
                            "name" : "C1",
                            "updatedAt" : "2019-08-29T11:40:39.000Z"
                          },
                          "a236b715-e682-460b-97b6-c1db24f7612e" : {
                            "id" : "a236b715-e682-460b-97b6-c1db24f7612e",
                            "name" : "C test",
                            "updatedAt" : "2019-08-29T10:18:11.000Z"
                          }
                        },
                        "mock" : {
                          "4ccd755f-2c80-481b-a262-49b55e12f5e1" : {
                            "id" : "4ccd755f-2c80-481b-a262-49b55e12f5e1",
                            "name" : "Mock",
                            "updatedAt" : "2019-08-20T10:18:13.000Z",
                            "url" : "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "API", "Relations" ],
        "summary" : "Create relations",
        "description" : "This call allows you to add existing Postman entities as new relations to an API. The request body should contain the relations to be created along with an array of entity IDs. \n\n<table>\n  <tr>\n    <th>Relation</th>\n    <th>Entity ID type</th>\n  <tr>\n  <tr>\n    <td>contracttest</td>\n    <td>Collection UIDs</td>\n  </tr>\n  <tr>\n    <td>integrationtest</td>\n    <td>Collection UIDs</td>\n  </tr>\n  <tr>\n    <td>documentation</td>\n    <td>Collection UIDs</td>\n  </tr>\n  <tr>\n    <td>testsuite</td>\n    <td>Collection UIDs</td>\n  </tr>\n  <tr>\n    <td>environment</td>\n    <td>Environment UIDs</td>\n  </tr>\n  <tr>\n    <td>mock</td>\n    <td>Mock IDs</td>\n  </tr>\n  <tr>\n    <td>monitor</td>\n    <td>Monitor IDs</td>\n  </tr>\n</table>\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "createRelations",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/apiVersionId_relations_body"
              },
              "example" : {
                "contracttest" : [ "collection-uid-1" ],
                "documentation" : [ "collection-uid-3" ],
                "mock" : [ "mock-uid-1" ],
                "testsuite" : [ "collection-uid-1", "collection-uid-2" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Create multiple relations from existing collections",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_15"
                },
                "examples" : {
                  "Create multiple relations from existing collections" : {
                    "value" : {
                      "contracttest" : [ "5bcece87-ca4b-4e75-a967-2a6845626164" ],
                      "documentation" : [ "2084eba6-a17b-4751-8f03-ea60f30ba19c" ],
                      "testsuite" : [ "e525fa71-035e-4620-acda-ce878524f1e7", "17a974b2-ce79-4b95-9d3f-217d6ff7e979" ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/schemas" : {
      "post" : {
        "tags" : [ "API", "Schema" ],
        "summary" : "Create Schema",
        "description" : "This call creates a new schema.\n\nRequest body should contain a `schema` object which should atleast have these properties with `string` values:\n\n- **`type`**: Allowed types are `openapi3`, `openapi2`, `openapi1`, `raml` and `graphql`.\n- **`language`** : Allowed languages are `json` and `yaml` for OpenAPI and RAML schema types. GraphQL schema type accepts only `graphql` language.\n- **`schema`**: Optional. If passed, must be the content of the schema as a `string`.\n\nResponse contains a `schema` object with all the details related to the created schema, namely, `id`, `language`, `type` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "createSchema",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/apiVersionId_schemas_body"
              },
              "example" : {
                "schema" : {
                  "language" : "yaml",
                  "schema" : "{\n  \"openapi\": \"3.0.0\",\n  \"info\": null,\n  \"version\": \"v1.0\",\n  \"title\": \"APi\",\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"Returns details about a particular user\",\n        \"operationId\": \"listUser\",\n        \"tags\": [\n          \"user\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"ID of the user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details about a user by ID\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\'#/components/schemas/User\\\\'\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\'#/components/schemas/Error\\\\'\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                  "type" : "openapi3"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Create schema",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_16"
                },
                "examples" : {
                  "Create schema" : {
                    "value" : {
                      "schema" : {
                        "apiVersion" : "ad810c39-df60-434e-a76f-a2192cd8d81f",
                        "createdAt" : "2019-02-12 19:34:49",
                        "createdBy" : "5665",
                        "id" : "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                        "language" : "yaml",
                        "type" : "openapi3",
                        "updateBy" : "5665",
                        "updatedAt" : "2019-02-12 19:34:49"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/schemas/{schemaId}" : {
      "get" : {
        "tags" : [ "API", "Schema" ],
        "summary" : "Get Schema",
        "description" : "This call fetches a single schema having the specified id.\n\nResponse contains a `schema` object with all the details related to the schema, namely, `id`, `language`, `type`, `schema` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "getSchema",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get schema",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_16"
                },
                "examples" : {
                  "Get schema" : {
                    "value" : {
                      "schema" : {
                        "apiVersion" : "ad810c39-df60-434e-a76f-a2192cd8d81f",
                        "createdAt" : "2019-02-12 19:34:49",
                        "createdBy" : "5665",
                        "id" : "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                        "language" : "yaml",
                        "type" : "openapi3",
                        "updateBy" : "5665",
                        "updatedAt" : "2019-02-12 19:34:49"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "API", "Schema" ],
        "summary" : "Update Schema",
        "description" : "This call updates an existing schema.\n\nRequest body should contain a `schema` object which should atleast have these properties with `string` values:\n\n- **`type`**: Allowed types are `openapi3`, `openapi2`, `openapi1`, `raml` and `graphql`.\n- **`language`** : Allowed languages are `json` and `yaml` for OpenAPI and RAML schema types. GraphQL schema type accepts only `graphql` language.\n- **`schema`**: Optional. If passed, must be the content of the schema as a `string`.\n\nResponse contains a `schema` object with all the details related to the created schema, namely, `id`, `language`, `type` etc. \n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "updateSchema",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/schemas_schemaId_body"
              },
              "example" : {
                "schema" : {
                  "language" : "json",
                  "schema" : "{\n  \"openapi\": \"3.0.0\",\n  \"info\": null,\n  \"version\": \"v1.0\",\n  \"title\": \"APi\",\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"Returns details about a particular user\",\n        \"operationId\": \"listUser\",\n        \"tags\": [\n          \"user\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"ID of the user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details about a user by ID\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\'#/components/schemas/User\\\\'\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\'#/components/schemas/Error\\\\'\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
                  "type" : "openapi3"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update schema",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_16"
                },
                "examples" : {
                  "Update schema" : {
                    "value" : {
                      "schema" : {
                        "apiVersion" : "ad810c39-df60-434e-a76f-a2192cd8d81f",
                        "createdAt" : "2019-02-12 19:34:49",
                        "createdBy" : "5665",
                        "id" : "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822",
                        "language" : "yaml",
                        "type" : "openapi3",
                        "updateBy" : "5665",
                        "updatedAt" : "2019-02-12 19:34:49"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/schemas/{schemaId}/collections" : {
      "post" : {
        "tags" : [ "API", "Schema" ],
        "summary" : "Create collection from schema",
        "description" : "This call creates a collection and links it to an API as one or multiple relations. \n\nRequest body requires two keys:\n- `name` - Name of the collection to be created.\n- `relations` - A list of relation(s) to be created.\n\nThe allowed relation types are `contracttest`, `integrationtest`, `testsuite`, and `documentation`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "createCollectionFromSchema",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "schemaId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspace",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{workspaceId}}"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/schemaId_collections_body"
              },
              "example" : {
                "name" : "My generated collection",
                "relations" : [ {
                  "type" : "contracttest"
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Create collection from schema",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_17"
                },
                "examples" : {
                  "Create collection from schema" : {
                    "value" : {
                      "collection" : {
                        "id" : "e6b0d46a-8722-4f42-ab86-f5f473187ddf",
                        "uid" : "112098-e6b0d46a-8722-4f42-ab86-f5f473187ddf"
                      },
                      "relations" : [ {
                        "id" : "4b40f06a-5a6a-448f-bfcd-a6dbcb68da22",
                        "type" : "contracttest"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/testsuite" : {
      "get" : {
        "tags" : [ "API", "Relations" ],
        "summary" : "Get test suite relations",
        "description" : "This call fetches all the relations by type which are linked to the specified API version along with their details.\n\nThe response will contain an array with key `{{relationType}}`. Each of the item will consist of all the details related each of the relation.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "getTestSuiteRelations",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get test suite relations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_18"
                },
                "examples" : {
                  "Get test suite relations" : {
                    "value" : {
                      "testsuite" : [ {
                        "collectionId" : "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745",
                        "id" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2",
                        "name" : "C test",
                        "updatedAt" : "2019-08-29T10:18:11.000Z"
                      }, {
                        "collectionId" : "7332157-a8bcd143-2b01-4b12-8c14-c7d05be77725",
                        "id" : "521b0486-ab91-4d3a-9189-43c9380a0533",
                        "name" : "C1",
                        "updatedAt" : "2019-08-29T11:40:39.000Z"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apis/{apiId}/versions/{apiVersionId}/{entityType}/{entityId}/syncWithSchema" : {
      "put" : {
        "tags" : [ "API", "Relations" ],
        "summary" : "Sync relations with schema",
        "description" : "This call allows you to keep the relation in sync with the API schema.\n\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "syncRelationsWithSchema",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "Id of the API",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "{{apiId}}"
          }
        }, {
          "name" : "apiVersionId",
          "in" : "path",
          "description" : "Id of the API version",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "{{apiVersionId}}"
          }
        }, {
          "name" : "entityType",
          "in" : "path",
          "description" : "Relation type (e.g documentation, contracttest, integrationtest, testsuite, mock, monitor)",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "{{entityType}}"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "Relation id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "{{entityId}}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful sync",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_19"
                },
                "examples" : {
                  "Successful sync" : {
                    "value" : {
                      "success" : true
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Failed to sync",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400"
                },
                "examples" : {
                  "Failed to sync" : {
                    "value" : {
                      "error" : {
                        "message" : "Unable to validate. Only the OpenAPI 3.0 schema format is supported.",
                        "name" : "validationFailed"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collections" : {
      "get" : {
        "tags" : [ "Collections" ],
        "summary" : "All Collections",
        "description" : "The `/collections` endpoint returns a list of all [collections](https://www.getpostman.com/docs/collections) that are accessible by you. The list includes your own collections and the collections that you have subscribed to.\n\nThe response contains an array of collection information containing the `name`, `id`, `owner` and `uid` of each collection.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "allCollections",
        "responses" : {
          "200" : {
            "description" : "Valid Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_20"
                },
                "examples" : {
                  "Valid Response" : {
                    "value" : {
                      "collections" : [ {
                        "id" : "dac5eac9-148d-a32e-b76b-3edee9da28f7",
                        "name" : "Cloud API",
                        "owner" : "631643",
                        "uid" : "631643-dac5eac9-148d-a32e-b76b-3edee9da28f7"
                      }, {
                        "id" : "f2e66c2e-5297-e4a5-739e-20cbb90900e3",
                        "name" : "Sample Collection",
                        "owner" : "631643",
                        "uid" : "631643-f2e66c2e-5297-e4a5-739e-20cbb90900e3"
                      }, {
                        "id" : "f695cab7-6878-eb55-7943-ad88e1ccfd65",
                        "name" : "Postman Echo",
                        "owner" : "631643",
                        "uid" : "631643-f695cab7-6878-eb55-7943-ad88e1ccfd65"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Collections" ],
        "summary" : "Create Collection",
        "description" : "This endpoint allows you to create collections using the Postman Collection v2 format. For more information about the v2 schema, check the format [here](https://schema.getpostman.com/json/collection/v2.0.0/docs/index.html).\n\nOn successful creation of the collection, the response returns the collection `name`, `id` and the `uid`.\n\nYou can also specify the context of a workspace to create a collection in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "createCollection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/collections_body"
              },
              "example" : {
                "collection" : {
                  "info" : {
                    "description" : "This is just a sample collection.",
                    "name" : "Sample Collection {{$randomInt}}",
                    "schema" : "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                  },
                  "item" : [ {
                    "item" : [ {
                      "name" : "Sample POST Request",
                      "request" : {
                        "body" : {
                          "mode" : "raw",
                          "raw" : "{\"data\": \"123\"}"
                        },
                        "description" : "This is a sample POST Request",
                        "header" : [ {
                          "key" : "Content-Type",
                          "value" : "application/json"
                        } ],
                        "method" : "POST",
                        "url" : "https://postman-echo.com/post"
                      }
                    } ],
                    "name" : "This is a folder"
                  }, {
                    "name" : "Sample GET Request",
                    "request" : {
                      "description" : "This is a sample GET Request",
                      "method" : "GET",
                      "url" : "https://postman-echo/get"
                    }
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Create Collection in a Workspace",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_21"
                },
                "examples" : {
                  "Create Collection in a Workspace" : {
                    "value" : {
                      "collection" : {
                        "id" : "2412a72c-1d8e-491b-aced-93809c0e94e9",
                        "name" : "Sample Collection",
                        "uid" : "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_1"
                },
                "examples" : {
                  "Malformed Request" : {
                    "value" : {
                      "error" : {
                        "message" : "Missing required property: name at info",
                        "name" : "malformedRequestError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collections/fork/{collection_uid}" : {
      "post" : {
        "tags" : [ "Collections" ],
        "summary" : "Create a Fork",
        "description" : "This endpoint allows you to create a fork from an existing collection.\n\nOn successful creation of the collection, the response returns the collection `name`, `id`, `uid` along with `fork` information.\n\nYou can also specify the context of a workspace to fork a collection in by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "createAFork",
        "parameters" : [ {
          "name" : "collection_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workspace",
          "in" : "query",
          "description" : "Workspace ID is required to create a fork",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{workspace_id}}"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/fork_collection_uid_body"
              },
              "example" : {
                "name" : "Fork name"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : ""
          }
        }
      }
    },
    "/collections/merge" : {
      "post" : {
        "tags" : [ "Collections" ],
        "summary" : "Merge a Fork",
        "description" : "This endpoint allows you to merge a forked collection back to its destination collection.\n\nOn successful creation of the collection, the response returns the collection `name`, `id` and `uid`.\n\nYou need to specify the fork UID (as `source`) and destination collection UID (as `destination`) in the request body.\n\nOptionally, you can also specify the merge strategy as either `deleteSource` or `updateSourceWithDestination`. Following is an explanation of the merge strategies\n\n| Merge Strategy | Behaviour |\n| --- | --- |\n| deleteSource | Forked collection is deleted after merging |\n| updateSourceWithDestination | Forked collection is up to date with changes in destination collection |\n\nIf the collections cannot be merged (due to conflicts), appropriate error messages will be returned.\n\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "mergeAFork",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/collections_merge_body"
              },
              "example" : {
                "destination" : "{{destination_collection_uid}}",
                "source" : "{{source_collection_uid}}",
                "strategy" : "deleteSource"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : ""
          }
        }
      }
    },
    "/collections/{collection_uid}" : {
      "get" : {
        "tags" : [ "Collections" ],
        "summary" : "Single Collection ",
        "description" : "Access the contents of a collection that is accessible to you using its unique id (`uid`).\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "singleCollection",
        "parameters" : [ {
          "name" : "collection_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Valid Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_22"
                },
                "examples" : {
                  "Valid Response" : {
                    "value" : {
                      "collection" : {
                        "info" : {
                          "_postman_id" : "f2e66c2e-5297-e4a5-739e-20cbb90900e3",
                          "description" : "This is a sample collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.",
                          "name" : "Sample Collection",
                          "schema" : "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
                        },
                        "item" : [ {
                          "event" : [ {
                            "listen" : "test",
                            "script" : {
                              "exec" : "var responseJSON;\ntry {\n    tests[\"Body contains headers\"] = responseBody.has(\"headers\");\n    responseJSON = JSON.parse(responseBody);\n    tests[\"Header contains host\"] = \"host\" in responseJSON.headers;\n    tests[\"Header contains test parameter sent as part of request header\"] = \"my-sample-header\" in responseJSON.headers;\n}\ncatch (e) { }\n\n\n\n",
                              "type" : "text/javascript"
                            }
                          } ],
                          "id" : "82ee981b-e19f-962a-401e-ea34ebfb4848",
                          "name" : "Request Headers",
                          "request" : {
                            "body" : {
                              "formdata" : [ ],
                              "mode" : "formdata"
                            },
                            "description" : "",
                            "header" : [ {
                              "description" : "",
                              "key" : "my-sample-header",
                              "value" : "Lorem ipsum dolor sit amet"
                            } ],
                            "method" : "GET",
                            "url" : "https://echo.getpostman.com/headers"
                          },
                          "response" : [ ]
                        } ],
                        "variables" : [ ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Collections" ],
        "summary" : "Update Collection",
        "description" : "This endpoint allows you to update an existing collection using the Postman Collection v2 format. For more information about the v2 schema, check the format [here](https://schema.getpostman.com/json/collection/v2.0.0/docs/index.html).\n\nOn successful updation of the collection, the response returns the collection `name`, `id` and `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.\n\nNote: Please be careful when trying to update the collection, as the existing collection will be replaced by the request body.",
        "operationId" : "updateCollection",
        "parameters" : [ {
          "name" : "collection_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/collections_collection_uid_body"
              },
              "example" : {
                "collection" : {
                  "info" : {
                    "_postman_id" : "174bad7c-07e3-45f3-914f-36cf84e5586f",
                    "description" : "This is just a sample collection.",
                    "name" : "Sample Collection {{$randomInt}}",
                    "schema" : "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
                  },
                  "item" : [ {
                    "item" : [ {
                      "name" : "Sample POST Request",
                      "request" : {
                        "body" : {
                          "mode" : "raw",
                          "raw" : "{\"data\": \"123\"}"
                        },
                        "description" : "This is a sample POST Request",
                        "header" : [ {
                          "key" : "Content-Type",
                          "value" : "application/json"
                        } ],
                        "method" : "POST",
                        "url" : "https://postman-echo.com/post"
                      }
                    } ],
                    "name" : "This is a folder"
                  }, {
                    "name" : "Sample GET Request",
                    "request" : {
                      "description" : "This is a sample GET Request",
                      "method" : "GET",
                      "url" : "https://postman-echo/get"
                    }
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Collection Updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_23"
                },
                "examples" : {
                  "Collection Updated" : {
                    "value" : {
                      "collection" : {
                        "id" : "1d3daef4-2037-4584-ab86-bafd8c8f8a55",
                        "name" : "Sample Collection",
                        "uid" : "5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Collection ID Mismatch",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_2"
                },
                "examples" : {
                  "Collection ID Mismatch" : {
                    "value" : {
                      "error" : {
                        "message" : "The collection ID in the path does not match the collection ID in the request body.",
                        "name" : "collectionMismatchError"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Not Enough Permissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403"
                },
                "examples" : {
                  "Not Enough Permissions" : {
                    "value" : {
                      "error" : {
                        "message" : "You do not have enough permissions to perform this action.",
                        "name" : "forbiddenError"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Collection Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404"
                },
                "examples" : {
                  "Collection Not Found" : {
                    "value" : {
                      "error" : {
                        "details" : {
                          "id" : "1d3daef4-2037-4584-ab86-bafd8c8f8a54",
                          "item" : "collection"
                        },
                        "message" : "The specified item does not exist.",
                        "name" : "instanceNotFoundError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Collections" ],
        "summary" : "Delete Collection",
        "description" : "This endpoint allows you to delete an existing collection.\n\nOn successful deletion of the collection, the response returns the `id` and `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "deleteCollection",
        "parameters" : [ {
          "name" : "collection_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Collection Deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_24"
                },
                "examples" : {
                  "Collection Deleted" : {
                    "value" : {
                      "collection" : {
                        "id" : "a14c6da7-afba-4a84-bf22-4febbaaced6c",
                        "uid" : "5852-a14c6da7-afba-4a84-bf22-4febbaaced6c"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Collection Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404_1"
                },
                "examples" : {
                  "Collection Not Found" : {
                    "value" : {
                      "error" : {
                        "details" : {
                          "id" : "a14c6da7-afba-4a84-bf22-4febbaaced6c",
                          "item" : "collection"
                        },
                        "message" : "The specified item does not exist.",
                        "name" : "instanceNotFoundError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/environments" : {
      "get" : {
        "tags" : [ "Environments" ],
        "summary" : "All Environments",
        "description" : "The `/environments` endpoint returns a list of all [environments](https://www.getpostman.com/docs/environments) that belong to you..\n\nThe response contains an array of environments' information containing the `name`, `id`, `owner` and `uid` of each environment.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "allEnvironments",
        "responses" : {
          "200" : {
            "description" : "Valid Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_25"
                },
                "examples" : {
                  "Valid Response" : {
                    "value" : {
                      "environments" : [ {
                        "id" : "357668d2-84f1-2264-438b-113095359f80",
                        "name" : "Postman Cloud API",
                        "owner" : "631643",
                        "uid" : "631643-357668d2-84f1-2264-438b-113095359f80"
                      }, {
                        "id" : "84a119b6-f4b1-9120-5f11-a73b17818d70",
                        "name" : "Postman Cloud API.template",
                        "owner" : "631643",
                        "uid" : "631643-84a119b6-f4b1-9120-5f11-a73b17818d70"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Environments" ],
        "summary" : "Create Environment",
        "description" : "A sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"environment\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n              \"type\": \"string\",\n              \"maxLength\": 254,\n              \"minLength\": 1\n            },\n        \"values\": {\n          \"type\": \"array\",\n          \"maxItems\": 100,\n          \"additionalItems\": false,\n          \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"maxLength\": 254\n                  \"minLength\": 1\n                },\n                \"value\": { \"type\": \"string\" },\n                \"enabled\": { \"type\": \"boolean\" }\n              },\n              \"required\": [\"key\", \"value\"]\n            }\n        }\n      },\n      \"required\": [\"name\"]\n    }\n  },\n  \"required\": [\"environment\"]\n}\n```\n\nOn successful creation of the environment, the API returns the environment name and `id`.\n\nYou can also specify the context of a workspace to create an environment in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "createEnvironment",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/environments_body"
              },
              "example" : {
                "environment" : {
                  "name" : "Sample Environment Name (required)",
                  "values" : [ {
                    "key" : "variable_name_1",
                    "value" : "The value of the variable"
                  }, {
                    "key" : "variable_name_2",
                    "value" : ""
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_26"
                },
                "examples" : {
                  "Successful Response" : {
                    "value" : {
                      "environment" : {
                        "id" : "f158266e-306b-4702-a2b9-e4ede7878b7a",
                        "name" : "Sample Environment Name (required)",
                        "uid" : "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Failure Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_3"
                },
                "examples" : {
                  "Failure Response" : {
                    "value" : {
                      "error" : {
                        "message" : "Missing required property: environment",
                        "name" : "malformedRequestError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/environments/{environment_uid}" : {
      "get" : {
        "tags" : [ "Environments" ],
        "summary" : "Single Environment",
        "description" : "Access the contents of an environment that is accessible to you using its unique id (`uid`).\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "singleEnvironment",
        "parameters" : [ {
          "name" : "environment_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Valid Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_27"
                },
                "examples" : {
                  "Valid Response" : {
                    "value" : {
                      "environment" : {
                        "id" : "84a119b6-f4b1-9120-5f11-a73b17818d70",
                        "name" : "Postman Cloud API.template",
                        "values" : [ {
                          "enabled" : true,
                          "hovered" : false,
                          "key" : "postman_api_key",
                          "type" : "text",
                          "value" : ""
                        } ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Environments" ],
        "summary" : "Update Environment",
        "description" : "This endpoint replaces an existing environment.\n\nA sample body is added to the request that conforms to the following JSON schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"environment\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"maxLength\": 254,\n          \"minLength\": 1\n        },\n        \"values\": {\n          \"type\": \"array\",\n          \"maxItems\": 100,\n          \"additionalItems\": false,\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"key\": {\n                \"type\": \"string\",\n                \"maxLength\": 254,\n                \"minLength\": 1\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"maxLength\": 254,\n                \"minLength\": 1\n              },\n              \"type\": {\n                \"type\": \"string\"\n              },\n              \"enabled\": {\n                \"type\": \"boolean\"\n              }\n            },\n            \"required\": [\n              \"key\",\n              \"value\"\n            ]\n          }\n        }\n      }\n    }\n  },\n  \"required\": [\n    \"environment\"\n  ]\n}\n```\n\nOn successful updation of the environment, the API returns the environment name and `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "updateEnvironment",
        "parameters" : [ {
          "name" : "environment_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/environments_environment_uid_body"
              },
              "example" : {
                "environment" : {
                  "name" : "New Name",
                  "values" : [ {
                    "key" : "name",
                    "value" : "Bruce Wayne"
                  }, {
                    "key" : "occupation",
                    "value" : "Vigilante"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_28"
                },
                "examples" : {
                  "Successful Response" : {
                    "value" : {
                      "environment" : {
                        "id" : "357668d2-84f1-2264-438b-113095359f80",
                        "name" : "New Name",
                        "uid" : "631643-357668d2-84f1-2264-438b-113095359f80"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Failure Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_4"
                },
                "examples" : {
                  "Failure Response" : {
                    "value" : {
                      "error" : {
                        "message" : "Invalid type: null (expected object) at environment.values.0",
                        "name" : "malformedRequestError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Environments" ],
        "summary" : "Delete Environment",
        "description" : "This endpoint allows you to delete a single environment based on an environment's unique `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "deleteEnvironment",
        "parameters" : [ {
          "name" : "environment_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Environment Deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_29"
                },
                "examples" : {
                  "Environment Deleted" : {
                    "value" : {
                      "environment" : {
                        "id" : "4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce",
                        "uid" : "5852-4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Environment Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404_2"
                },
                "examples" : {
                  "Environment Not Found" : {
                    "value" : {
                      "error" : {
                        "message" : "The specified environment does not exist.",
                        "name" : "instanceNotFoundError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/import/exported" : {
      "post" : {
        "tags" : [ "Import" ],
        "summary" : "Import exported data",
        "description" : "This endpoint allows you to import your exported Postman data.\nFor more information about how you can export your data, refer <a href=\"https://go.postman.co/me/export\">Export your Postman data.</a>\n\nOn successful imports, the response will be an array with Each element contaning `id`, `name` and `uid` of entities created.\n\n**Note**: Refer to examples for different scenarios.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header.",
        "operationId" : "importExportedData",
        "requestBody" : {
          "content" : {
            "application/octet-stream" : { }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success: Import to a specific workspace with workspace ID passed as a query parameter",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_30"
                },
                "examples" : {
                  "Success: Import to a specific workspace with workspace ID passed as a query parameter" : {
                    "value" : {
                      "collections" : [ {
                        "id" : "b31be584-1b1e-4444-b581-761edf88fe77",
                        "name" : "Swagger Petstore",
                        "uid" : "2282-b31be584-1b1e-4444-b581-761edf88fe77"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error: Param Missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_5"
                },
                "examples" : {
                  "Error: Param Missing" : {
                    "value" : {
                      "error" : {
                        "details" : {
                          "param" : "type"
                        },
                        "message" : "The request body is missing a value for the type parameter. Check your request and try again.",
                        "name" : "paramMissingError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/import/openapi" : {
      "post" : {
        "tags" : [ "Import" ],
        "summary" : "Import external API specification",
        "description" : "This endpoint allows you to import external API specifications into Postman.\n\nCurrently, this endpoint only supports the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md\">OpenAPI</a> specification, for which the `importType` will be `openapi`.\n\nOn a successful import, the response will be an array with each element contaning `id`, `name` and `uid` of entities created.\n\nSupported `type`s:\n\n- string\n- json\n- file\n\nThe `input` parameter should be defined based on the `type`.\n\n> To import a file, request body must be form-data with `type` param set to `file`.\n\n**Note**: Refer to examples for different scenarios.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header.",
        "operationId" : "importExternalApiSpecification",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/import_openapi_body"
              },
              "example" : {
                "input" : {
                  "info" : {
                    "license" : {
                      "name" : "MIT"
                    },
                    "title" : "Swagger Petstore",
                    "version" : "1.0.0"
                  },
                  "openapi" : "3.0.0",
                  "paths" : {
                    "/pets" : {
                      "get" : {
                        "operationId" : "listPets",
                        "parameters" : [ {
                          "description" : "limit",
                          "in" : "query",
                          "name" : "limit",
                          "required" : false,
                          "schema" : {
                            "format" : "int32",
                            "type" : "integer"
                          }
                        } ],
                        "responses" : {
                          "default" : {
                            "content" : {
                              "application/json" : {
                                "schema" : {
                                  "properties" : {
                                    "code" : {
                                      "format" : "int32",
                                      "type" : "integer"
                                    },
                                    "message" : {
                                      "type" : "string"
                                    }
                                  },
                                  "required" : [ "code", "message" ]
                                }
                              }
                            },
                            "description" : "unexpected error"
                          }
                        },
                        "summary" : "List all pets"
                      }
                    }
                  },
                  "servers" : [ {
                    "url" : "http://petstore.swagger.io/v1"
                  } ]
                },
                "type" : "json"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success: Import to a specific workspace with workspace ID passed as a query parameter",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_30"
                },
                "examples" : {
                  "Success: Import to a specific workspace with workspace ID passed as a query parameter" : {
                    "value" : {
                      "collections" : [ {
                        "id" : "b31be584-1b1e-4444-b581-761edf88fe77",
                        "name" : "Swagger Petstore",
                        "uid" : "2282-b31be584-1b1e-4444-b581-761edf88fe77"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Error: Param Missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_5"
                },
                "examples" : {
                  "Error: Param Missing" : {
                    "value" : {
                      "error" : {
                        "details" : {
                          "param" : "type"
                        },
                        "message" : "The request body is missing a value for the type parameter. Check your request and try again.",
                        "name" : "paramMissingError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/me" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "API Key Owner",
        "description" : "the `/me` Postman API endpoint lets you access information about the authenticated user. You can retrieve the authenticated user's username, full name, e-mail address, and any other available information.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "apiKeyOwner",
        "responses" : {
          "200" : {
            "description" : "Valid Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_31"
                },
                "examples" : {
                  "Valid Response" : {
                    "value" : {
                      "operations" : [ {
                        "limit" : 1000000,
                        "name" : "mock_usage",
                        "overage" : 0,
                        "usage" : 2382
                      }, {
                        "limit" : 10000000,
                        "name" : "monitor_request_runs",
                        "overage" : 0,
                        "usage" : 49492
                      }, {
                        "limit" : 5000000,
                        "name" : "documenter_public_views",
                        "overage" : 0,
                        "usage" : 120232
                      }, {
                        "limit" : 1000000,
                        "name" : "api_usage",
                        "overage" : 0,
                        "usage" : 1345
                      }, {
                        "limit" : 25,
                        "name" : "custom_domains",
                        "overage" : 0,
                        "usage" : 1
                      }, {
                        "limit" : 1,
                        "name" : "custom_authentication_methods",
                        "overage" : 0,
                        "usage" : 1
                      }, {
                        "limit" : 10000,
                        "name" : "serverless_requests",
                        "overage" : 0,
                        "usage" : 0
                      }, {
                        "limit" : 5000,
                        "name" : "integrations",
                        "overage" : 0,
                        "usage" : 145
                      }, {
                        "limit" : 1000000,
                        "name" : "cloud_agent_requests",
                        "overage" : 0,
                        "usage" : 23823
                      } ],
                      "user" : {
                        "avatar" : "https://www.gravatar.com/avatar/e1f3994f2632af3d1c8c2dcc168a10e6",
                        "email" : "janedoe@example.com",
                        "fullName" : "Jane Doe",
                        "id" : "631643",
                        "isPublic" : false,
                        "username" : "janedoe"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mocks" : {
      "get" : {
        "tags" : [ "Mocks" ],
        "summary" : "All Mocks",
        "description" : "This endpoint fetches all the mocks that you have created.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "allMocks",
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_32"
                },
                "examples" : {
                  "Successful Response" : {
                    "value" : {
                      "mocks" : [ {
                        "collection" : "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                        "environment" : "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524",
                        "id" : "0fca2246-c108-41f5-8454-cc032def329f",
                        "mockUrl" : "https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io",
                        "owner" : "1679925",
                        "uid" : "1679925-0fca2246-c108-41f5-8454-cc032def329f"
                      }, {
                        "collection" : "1679925-37294bb0-e27b-5e52-93ae-c07dd445216d",
                        "id" : "2c624389-705a-4e66-9777-05314b431796",
                        "mockUrl" : "https://2c624389-705a-4e66-9777-05314b431796.mock.pstmn.io",
                        "owner" : "1679925",
                        "uid" : "1679925-2c624389-705a-4e66-9777-05314b431796"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Mocks" ],
        "summary" : "Create Mock",
        "description" : "This endpoint allows you to create a mock on a collection. You can also provide an environment UID to resolve any environment variables in the collection.\n\nYou can also specify the context of a workspace to create a mock in directly by passing the `workspace` as a query param.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "createMock",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mocks_body"
              },
              "example" : {
                "mock" : {
                  "collection" : "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                  "environment" : "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_33"
                },
                "examples" : {
                  "Successful Response" : {
                    "value" : {
                      "mock" : {
                        "collection" : "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                        "environment" : "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524",
                        "id" : "0fca2246-c108-41f5-8454-cc032def329f",
                        "mockUrl" : "https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io",
                        "owner" : "1679925",
                        "uid" : "1679925-0fca2246-c108-41f5-8454-cc032def329f"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mocks/{mock_uid}" : {
      "get" : {
        "tags" : [ "Mocks" ],
        "summary" : "Single Mock",
        "description" : "This endpoint fetches you the basic information about a single mock using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "singleMock",
        "parameters" : [ {
          "name" : "mock_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_33"
                },
                "examples" : {
                  "Successful Response" : {
                    "value" : {
                      "mock" : {
                        "collection" : "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc",
                        "environment" : "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524",
                        "id" : "0fca2246-c108-41f5-8454-cc032def329f",
                        "mockUrl" : "https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io",
                        "owner" : "1679925",
                        "uid" : "1679925-0fca2246-c108-41f5-8454-cc032def329f"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Mocks" ],
        "summary" : "Update Mock",
        "description" : "This endpoint allows you to update a mock you have created using its `uid`. The endpoint allows you to edit fields,\n* name\n* environment\n* description\n* private\n* versionTag\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "updateMock",
        "parameters" : [ {
          "name" : "mock_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/mocks_mock_uid_body"
              },
              "example" : {
                "mock" : {
                  "description" : "example describing update mock description",
                  "environment" : "11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19",
                  "name" : "My Mock Server",
                  "private" : false,
                  "versionTag" : "abf07d3d-f8ec-47d4-8015-9fe83078b4ec"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "success Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_34"
                },
                "examples" : {
                  "success Response" : {
                    "value" : {
                      "mock" : {
                        "collection" : "11582779-fd6797e2-de6b-4699-975c-85290e4c2499",
                        "config" : {
                          "headers" : [ ],
                          "matchBody" : false,
                          "matchQueryParams" : true,
                          "matchWildcards" : true
                        },
                        "environment" : "11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19",
                        "id" : "06040138-dd6b-4cce-9a02-7e1c1ab59723",
                        "mockUrl" : "https://06040138-dd6b-4cce-9a02-7e1c1ab59723.mock.pstmn.io",
                        "name" : "My Mock Server",
                        "owner" : "11582779",
                        "uid" : "11582779-06040138-dd6b-4cce-9a02-7e1c1ab59723"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Mocks" ],
        "summary" : "Delete Mock",
        "description" : "This endpoint allows you to delete an existing mock using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "deleteMock",
        "parameters" : [ {
          "name" : "mock_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_35"
                },
                "examples" : {
                  "Successful Response" : {
                    "value" : {
                      "mock" : {
                        "id" : "0fca2246-c108-41f5-8454-cc032def329f",
                        "uid" : "1679925-0fca2246-c108-41f5-8454-cc032def329f"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mocks/{mock_uid}/publish" : {
      "post" : {
        "tags" : [ "Mocks" ],
        "summary" : "Publish Mock",
        "description" : "This endpoint publishes the mock you have created using its `uid`\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key ` request header or `apikey` URL query parameter.",
        "operationId" : "publishMock",
        "parameters" : [ {
          "name" : "mock_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_36"
                },
                "examples" : {
                  "Success Response" : {
                    "value" : {
                      "mock" : {
                        "id" : "06040138-dd6b-4cce-9a02-7e1c1ab59723"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mocks/{mock_uid}/unpublish" : {
      "delete" : {
        "tags" : [ "Mocks" ],
        "summary" : "Unpublish Mock",
        "description" : "This endpoint unpublishes the mock you have created using its `uid`\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key ` request header or `apikey` URL query parameter.",
        "operationId" : "unpublishMock",
        "parameters" : [ {
          "name" : "mock_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_36"
                },
                "examples" : {
                  "Success Response" : {
                    "value" : {
                      "mock" : {
                        "id" : "06040138-dd6b-4cce-9a02-7e1c1ab59723"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitors" : {
      "get" : {
        "tags" : [ "Monitors" ],
        "summary" : "All Monitors",
        "description" : "The `/monitors` endpoint returns a list of all [monitors](https://monitor.getpostman.com/) that are accessible by you.\n\nThe response contains an array of monitors information containing the `name`, `id`, `owner` and `uid` of each monitor.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "allMonitors",
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_37"
                },
                "examples" : {
                  "Successful Response" : {
                    "value" : {
                      "monitors" : [ {
                        "id" : "1e6b6c77-2031-42d0-9948-76d7251b2dd1",
                        "name" : "Batman & Sherlock Holmes Monitor",
                        "owner" : "5852",
                        "uid" : "5852-1e6b6c77-2031-42d0-9948-76d7251b2dd1"
                      }, {
                        "id" : "1e6b6cb7-f13d-4000-acb7-0695757174a8",
                        "name" : "Team Level Monitor",
                        "owner" : "5886",
                        "uid" : "5886-1e6b6cb7-f13d-4000-acb7-0695757174a8"
                      }, {
                        "id" : "1e6b6cc1-c760-48e0-968f-4bfaeeae9af1",
                        "name" : "Postman Echo Monitor",
                        "owner" : "5852",
                        "uid" : "5852-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Monitors" ],
        "summary" : "Create Monitor",
        "description" : "This endpoint allows you to create a monitor.\n\nSome sample `cron` values are:\n\n| Frequency                  | Cron Pattern   |\n|-----------------------|----------------|\n| Every 5 minutes       | `*/5 * * * *`  |\n| Every 30 minutes     | `*/30 * * * *` |\n| Every Hour         | `0 */1 * * *`  |\n| Every 6 Hours      | `0 */6 * * *`  |\n| Every day at 5pm    | `0 17 * * *`   |\n| Every Monday at 12pm  | `0 12 * * MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 * * MON-FRI` |\n\nNote: Currently, you can only create monitors at some limited schedules. You can head to [Postman Monitors](https://monitor.getpostman.com) to see the allowed schedules. \n\nFor more information about the format of the `timezone` value, check this [list of time zones.](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n\nYou can also specify the context of a workspace to create a monitor in directly by passing the `workspace` as a query param.\n\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "createMonitor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/monitors_body"
              },
              "example" : {
                "monitor" : {
                  "collection" : "5852-8d05dd85-222c-1452-553b-e76a531b71ed",
                  "environment" : "5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef",
                  "name" : "This is a Monitor Name",
                  "schedule" : {
                    "cron" : "0 0 * * *",
                    "timezone" : "Asia/Kolkata"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Create Monitor in a Workspace",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_38"
                },
                "examples" : {
                  "Create Monitor in a Workspace" : {
                    "value" : {
                      "monitor" : {
                        "id" : "1e6b6dfd-7ba4-4590-9ee1-5948102d7797",
                        "name" : "Monitor Name",
                        "uid" : "5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Parameter Missing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_6"
                },
                "examples" : {
                  "Parameter Missing" : {
                    "value" : {
                      "error" : {
                        "details" : {
                          "param" : "monitor"
                        },
                        "message" : "Parameter is missing in the request.",
                        "name" : "paramMissingError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitors/{monitor_uid}" : {
      "get" : {
        "tags" : [ "Monitors" ],
        "summary" : "Single Monitor",
        "description" : "This endpoint fetches you basic information about the monitor using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "singleMonitor",
        "parameters" : [ {
          "name" : "monitor_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_39"
                },
                "examples" : {
                  "Successful Response" : {
                    "value" : {
                      "monitor" : {
                        "collectionUid" : "5852-8d05dd85-222c-1452-553b-e76a531b71ed",
                        "distribution" : [ ],
                        "environmentUid" : "5851-8d05dd85-222c-1452-553b-e76a531b71ed",
                        "id" : "1e6b6cc1-c760-48e0-968f-4bfaeeae9af1",
                        "lastRun" : {
                          "finishedAt" : "2020-03-25T15:45:31.340Z",
                          "startedAt" : "2020-03-25T15:45:29.218Z",
                          "stats" : {
                            "assertions" : {
                              "failed" : 1,
                              "total" : 8
                            },
                            "requests" : {
                              "total" : 4
                            }
                          },
                          "status" : "failed"
                        },
                        "name" : "Postman Echo Monitor",
                        "notifications" : {
                          "onError" : [ {
                            "email" : "john.appleseed@example.com"
                          } ],
                          "onFailure" : [ {
                            "email" : "john.appleseed@example.com"
                          } ]
                        },
                        "options" : {
                          "followRedirects" : true,
                          "requestDelay" : 0,
                          "requestTimeout" : 3000,
                          "strictSSL" : true
                        },
                        "owner" : "5852",
                        "schedule" : {
                          "cron" : "0 0 * * * *",
                          "nextRun" : "2016-11-30T09:30:00.000Z",
                          "timezone" : "Asia/Calcutta"
                        },
                        "uid" : "5852-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Monitor Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404_3"
                },
                "examples" : {
                  "Monitor Not Found" : {
                    "value" : {
                      "error" : {
                        "message" : "The specified monitor does not exist.",
                        "name" : "instanceNotFoundError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Monitors" ],
        "summary" : "Update Monitor",
        "description" : "This endpoint allows you to update a monitor using its `uid`. Only the monitor name and its schedule can be updated.\n\nSome example `cron` values are:\n\n| Frequency                  | Cron Pattern   |\n|-----------------------|----------------|\n| Every 5 minutes       | `*/5 * * * *`  |\n| Every 30 minutes     | `*/30 * * * *` |\n| Every Hour         | `0 */1 * * *`  |\n| Every 6 Hours      | `0 */6 * * *`  |\n| Every day at 5pm    | `0 17 * * *`   |\n| Every Monday at 12pm  | `0 12 * * MON` |\n| Every weekday (Monday - Friday) at 6am | `0 6 * * MON-FRI` |\n\nNote: Currently, you can only create monitors at some limited schedules. You can head to [Postman Monitors](https://monitor.getpostman.com) to see the allowed schedules. \n\nFor more information about the format of the `timezone` value, check this [list of time zones.](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "updateMonitor",
        "parameters" : [ {
          "name" : "monitor_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/monitors_monitor_uid_body"
              },
              "example" : {
                "monitor" : {
                  "name" : "Updated Monitor Name",
                  "schedule" : {
                    "cron" : "*/5 * * * *",
                    "timezone" : "America/Chicago"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Monitor Updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_40"
                },
                "examples" : {
                  "Monitor Updated" : {
                    "value" : {
                      "monitor" : {
                        "id" : "1e6b6e2a-c2ad-4090-b750-0df4e6624352",
                        "name" : "Updated Monitor Name",
                        "uid" : "5852-1e6b6e2a-c2ad-4090-b750-0df4e6624352"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Monitors" ],
        "summary" : "Delete Monitor",
        "description" : "This endpoint can be used to delete an existing monitor using its `uid`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "deleteMonitor",
        "parameters" : [ {
          "name" : "monitor_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Monitor Deleted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_41"
                },
                "examples" : {
                  "Monitor Deleted" : {
                    "value" : {
                      "monitor" : {
                        "id" : "1e6b8957-35f9-42a0-8d2f-f03d7085b3d2",
                        "uid" : "5852-1e6b8957-35f9-42a0-8d2f-f03d7085b3d2"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Monitor Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404_3"
                },
                "examples" : {
                  "Monitor Not Found" : {
                    "value" : {
                      "error" : {
                        "message" : "The specified monitor does not exist.",
                        "name" : "instanceNotFoundError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitors/{monitor_uid}/run" : {
      "post" : {
        "tags" : [ "Monitors" ],
        "summary" : "Run a Monitor",
        "description" : "This endpoint will run the monitor instantly and wait for the monitor to run completely. It responds with the run results.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "runAMonitor",
        "parameters" : [ {
          "name" : "monitor_uid",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Monitor Run with Errors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_42"
                },
                "examples" : {
                  "Monitor Run with Errors" : {
                    "value" : {
                      "run" : {
                        "executions" : [ {
                          "id" : 1,
                          "item" : {
                            "id" : "b5e8d7dd-909c-4ba7-aef4-8609bc50b586",
                            "name" : "Sample POST Request"
                          },
                          "request" : {
                            "body" : {
                              "contentLength" : 18,
                              "mode" : "raw"
                            },
                            "headers" : {
                              "accept" : "*/*",
                              "accept-encoding" : "gzip, deflate",
                              "content-length" : 18,
                              "content-type" : "application/json"
                            },
                            "method" : "POST",
                            "timestamp" : "2016-12-04T14:30:26.025Z",
                            "url" : "echo.getpostman.com/post"
                          },
                          "response" : {
                            "body" : {
                              "contentLength" : 298
                            },
                            "code" : 200,
                            "headers" : {
                              "connection" : "keep-alive",
                              "content-encoding" : "gzip",
                              "content-type" : "application/json",
                              "date" : "Sun, 04 Dec 2016 14:30:26 GMT",
                              "transfer-encoding" : "chunked"
                            },
                            "responseSize" : 298,
                            "responseTime" : 26
                          }
                        }, {
                          "assertions" : {
                            "Status code is 400" : false
                          },
                          "id" : 2,
                          "item" : {
                            "id" : "f790d046-755d-44f5-a416-b825e18dfd9d",
                            "name" : "Sample GET Request"
                          },
                          "request" : {
                            "body" : {
                              "contentLength" : 0,
                              "mode" : "formdata"
                            },
                            "headers" : {
                              "accept" : "*/*",
                              "accept-encoding" : "gzip, deflate"
                            },
                            "method" : "GET",
                            "timestamp" : "2016-12-04T14:30:26.093Z",
                            "url" : "echo.getpostman.com/get"
                          },
                          "response" : {
                            "body" : {
                              "contentLength" : 280
                            },
                            "code" : 200,
                            "headers" : {
                              "connection" : "keep-alive",
                              "content-encoding" : "gzip",
                              "content-type" : "application/json",
                              "date" : "Sun, 04 Dec 2016 14:30:26 GMT",
                              "transfer-encoding" : "chunked"
                            },
                            "responseSize" : 280,
                            "responseTime" : 46
                          }
                        }, {
                          "id" : 3,
                          "item" : {
                            "id" : "336e6e17-6d3e-4b8f-a48f-b7e75cf13afb",
                            "name" : "This is the second request"
                          },
                          "request" : {
                            "body" : {
                              "contentLength" : 0,
                              "mode" : "formdata"
                            },
                            "headers" : {
                              "accept" : "*/*",
                              "accept-encoding" : "gzip, deflate",
                              "content-length" : 18
                            },
                            "method" : "POST",
                            "timestamp" : "2016-12-04T14:30:26.477Z",
                            "url" : "echo.getpostman.com/post"
                          },
                          "response" : {
                            "body" : {
                              "contentLength" : 345
                            },
                            "code" : 200,
                            "headers" : {
                              "connection" : "keep-alive",
                              "content-encoding" : "gzip",
                              "content-type" : "application/json",
                              "date" : "Sun, 04 Dec 2016 14:30:26 GMT",
                              "transfer-encoding" : "chunked"
                            },
                            "responseSize" : 345,
                            "responseTime" : 9
                          }
                        } ],
                        "failures" : [ {
                          "assertion" : {
                            "Status code is 400" : false
                          },
                          "executionId" : 2,
                          "message" : "Expected 'Status code is 400' to be truthy",
                          "name" : "AssertionError"
                        } ],
                        "info" : {
                          "collectionUid" : "5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55",
                          "finishedAt" : "2016-12-04T14:30:26.000Z",
                          "jobId" : "1e6ba2e3-1aaf-4c10-bd5f-905943284b2a",
                          "monitorId" : "1e6b8970-fd13-4480-b011-b3b3e3cd271d",
                          "name" : "Sample Collection monitor 1 #56",
                          "startedAt" : "2016-12-04T14:30:25.000Z",
                          "status" : "failed"
                        },
                        "stats" : {
                          "assertions" : {
                            "failed" : 1,
                            "total" : 1
                          },
                          "requests" : {
                            "failed" : 1,
                            "total" : 3
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks" : {
      "post" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Create Webhook",
        "description" : "Create a webhook that triggers a collection with your custom payload.\n\nYou can specify the webhook name and the collection to trigger by using the following attributes of the `webhook` object on your JSON body:\n\n* `name`: the name of the webhook that you're creating.\n* `collection`: the ID of the collection that you want to trigger once this webhook is called.\n\nOnce created, the webhook URL can be retrieved by accessing the `webhookUrl` attribute of the `webhook` object on the response JSON payload.",
        "operationId" : "createWebhook",
        "parameters" : [ {
          "name" : "workspace",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "{{workspace_id}}"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/webhooks_body"
              },
              "example" : {
                "webhook" : {
                  "collection" : "{{collection_id}}",
                  "name" : "{{webhook_name}}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : ""
          }
        }
      }
    },
    "/workspaces" : {
      "get" : {
        "tags" : [ "Workspaces" ],
        "summary" : "All workspaces",
        "description" : "The `/workspaces` endpoint returns a list of all [workspaces](https://www.getpostman.com/docs/v6/postman/workspaces/intro_to_workspaces) that is accessible by you. The list includes your own workspaces and the workspaces that you have access to.\n\nThe response contains an array of collection information containing the `name`, `id`, and `type` of each workspace.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "allWorkspaces",
        "responses" : {
          "200" : {
            "description" : "Valid Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_43"
                },
                "examples" : {
                  "Valid Response" : {
                    "value" : {
                      "workspaces" : [ {
                        "id" : "4e6d34c2-cfdb-4b33-8868-12a875bebda3",
                        "name" : "My Workspace",
                        "type" : "personal"
                      }, {
                        "id" : "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                        "name" : "Team workspace",
                        "type" : "team"
                      } ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Workspaces" ],
        "summary" : "Create Workspace",
        "description" : "This endpoint allows you to create a workspace and populate it with entities like `collections`, `environments`, `mocks` and `monitors` using their `uid`.\n\nOn successful creation of the workspace, the response returns the workspcae `name` and `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "createWorkspace",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/workspaces_body"
              },
              "example" : {
                "workspace" : {
                  "collections" : [ {
                    "id" : "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                    "name" : "Straw hats",
                    "uid" : "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                  } ],
                  "description" : "Some description",
                  "environments" : [ {
                    "id" : "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                    "name" : "env",
                    "uid" : "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                  } ],
                  "mocks" : [ {
                    "id" : "cda672ef-1375-40e9-baee-e20ece8d7b65"
                  } ],
                  "monitors" : [ {
                    "id" : "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                  } ],
                  "name" : "New Workspace",
                  "type" : "personal"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_44"
                },
                "examples" : {
                  "Successful Response" : {
                    "value" : {
                      "workspace" : {
                        "id" : "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                        "name" : "New Workspace"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Instance supplied not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_7"
                },
                "examples" : {
                  "Instance supplied not found" : {
                    "value" : {
                      "error" : {
                        "message" : "Instance not found in the database.",
                        "name" : "instanceNotFoundError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspace_id}" : {
      "get" : {
        "tags" : [ "Workspaces" ],
        "summary" : "Single workspace",
        "description" : "Access the contents of a workspace that is accessible to you using its id (`id`). Includes the collections, environments, mocks and monitors of that workspace.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "singleWorkspace",
        "parameters" : [ {
          "name" : "workspace_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Valid Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_45"
                },
                "examples" : {
                  "Valid Response" : {
                    "value" : {
                      "workspace" : {
                        "collections" : [ {
                          "id" : "7c31b469-bd43-4411-9283-6d397855ee0e",
                          "name" : "Mock demo - collection",
                          "uid" : "1234-7c31b469-bd43-4411-9283-6d397855ee0e"
                        }, {
                          "id" : "356fe068-a0f8-4f31-b34d-d12149eac681",
                          "name" : "Mock demo - response code",
                          "uid" : "1234-356fe068-a0f8-4f31-b34d-d12149eac681"
                        } ],
                        "description" : "Demos.",
                        "environments" : [ {
                          "id" : "423fd955-a9c8-47cd-9ab0-09a6a575c4be",
                          "name" : "Mock demo - CNX",
                          "uid" : "1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be"
                        }, {
                          "id" : "24c45c84-5147-4c15-bb9a-c3186b81d3cc",
                          "name" : "Mock Demo - response code",
                          "uid" : "1234-24c45c84-5147-4c15-bb9a-c3186b81d3cc"
                        } ],
                        "id" : "f8801e9e-03a4-4c7b-b31e-5db5cd771696",
                        "name" : "Demo workspace",
                        "type" : "personal"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Workspace Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_400_7"
                },
                "examples" : {
                  "Workspace Not Found" : {
                    "value" : {
                      "error" : {
                        "message" : "Instance not found in the database.",
                        "name" : "instanceNotFoundError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Workspaces" ],
        "summary" : "Update Workspace",
        "description" : "This endpoint allows you to update a workspace and update it's association to entities like `collections`, `environments`, `mocks` and `monitors` using their `uid`.\n\nOn successful updation of the workspace, the response returns the workspcae `name` and `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.\n\n**Note** : The endpoint expects you to send the desired state of the workspace in terms of the associated entities so be careful when trying to update these entities.\n\nFor eg. if your workspace has collections A and B, and in the update call, you send C's uid in the collections array, then A and B would be removed from the workspace and C would be added.",
        "operationId" : "updateWorkspace",
        "parameters" : [ {
          "name" : "workspace_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/workspaces_workspace_id_body"
              },
              "example" : {
                "workspace" : {
                  "collections" : [ {
                    "id" : "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d",
                    "name" : "Straw hats",
                    "uid" : "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
                  } ],
                  "description" : "Some description",
                  "environments" : [ {
                    "id" : "83a1aaa2-a204-4bd8-9b92-4d486918906b",
                    "name" : "env",
                    "uid" : "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
                  } ],
                  "mocks" : [ {
                    "id" : "cda672ef-1375-40e9-baee-e20ece8d7b65"
                  } ],
                  "monitors" : [ {
                    "id" : "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
                  } ],
                  "name" : "New Workspace updated"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_44"
                },
                "examples" : {
                  "Successful Response" : {
                    "value" : {
                      "workspace" : {
                        "id" : "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f",
                        "name" : "New Workspace"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Not enough permissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_403_1"
                },
                "examples" : {
                  "Not enough permissions" : {
                    "value" : {
                      "error" : {
                        "message" : "You do not have access to update this workspace.",
                        "name" : "forbiddenError"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Specified workspace/entities do not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_404_4"
                },
                "examples" : {
                  "Specified workspace/entities do not exist" : {
                    "value" : {
                      "error" : {
                        "message" : "The specified workspace does not exist.",
                        "name" : "instanceNotFoundError"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Workspaces" ],
        "summary" : "Delete Workspace",
        "description" : "This endpoint allows you to delete an existing workspace.\n\nOn successful deletion of the workspace, the response returns the `id`.\n\n> Requires <a href=\"#authentication\">API Key</a> as `X-Api-Key` request header or `apikey` URL query parameter.",
        "operationId" : "deleteWorkspace",
        "parameters" : [ {
          "name" : "workspace_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_46"
                },
                "examples" : {
                  "Successful Response" : {
                    "value" : {
                      "workspace" : {
                        "id" : "{{workspace_id}}"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "apis_api" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "This is description."
          },
          "name" : {
            "type" : "string",
            "example" : "Sync Service API"
          },
          "summary" : {
            "type" : "string",
            "example" : "This is supposed to be a short summary."
          }
        }
      },
      "apis_body" : {
        "type" : "object",
        "properties" : {
          "api" : {
            "$ref" : "#/components/schemas/apis_api"
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "api" : {
            "type" : "object",
            "properties" : {
              "createdAt" : {
                "type" : "string",
                "example" : "2019-02-12 19:34:49"
              },
              "createdBy" : {
                "type" : "string",
                "example" : "5665"
              },
              "description" : {
                "type" : "string",
                "example" : "This is supposed to handle markdown *descriptions*."
              },
              "id" : {
                "type" : "string",
                "example" : "387c2863-6ee3-4a56-8210-225f774edade"
              },
              "name" : {
                "type" : "string",
                "example" : "Sync API"
              },
              "summary" : {
                "type" : "string",
                "example" : "This is a summary"
              },
              "updatedAt" : {
                "type" : "string",
                "example" : "2019-02-12 19:34:49"
              }
            }
          }
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "api" : {
            "type" : "object",
            "properties" : {
              "createdAt" : {
                "type" : "string",
                "example" : "2019-02-12 19:34:49"
              },
              "createdBy" : {
                "type" : "string",
                "example" : "5665"
              },
              "description" : {
                "type" : "string",
                "example" : "This is a description.This is a description."
              },
              "id" : {
                "type" : "string",
                "example" : "387c2863-6ee3-4a56-8210-225f774edade"
              },
              "name" : {
                "type" : "string",
                "example" : "Sync API"
              },
              "summary" : {
                "type" : "string",
                "example" : "This is a summary"
              },
              "updatedAt" : {
                "type" : "string",
                "example" : "2019-02-12 19:34:49"
              }
            }
          }
        }
      },
      "apisapiId_api" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "This is an updated Description"
          },
          "name" : {
            "type" : "string",
            "example" : "New name"
          }
        }
      },
      "apis_apiId_body" : {
        "type" : "object",
        "properties" : {
          "api" : {
            "$ref" : "#/components/schemas/apisapiId_api"
          }
        }
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "api" : {
            "type" : "object",
            "properties" : {
              "createdAt" : {
                "type" : "string",
                "example" : "2019-02-12 19:34:49"
              },
              "createdBy" : {
                "type" : "string",
                "example" : "5665"
              },
              "description" : {
                "type" : "string",
                "example" : "This is a description."
              },
              "id" : {
                "type" : "string",
                "example" : "387c2863-6ee3-4a56-8210-225f774edade"
              },
              "name" : {
                "type" : "string",
                "example" : "Sync API"
              },
              "summary" : {
                "type" : "string",
                "example" : "This is a summary"
              },
              "updatedAt" : {
                "type" : "string",
                "example" : "2019-02-12 19:34:49"
              }
            }
          }
        }
      },
      "inline_response_200_3" : {
        "type" : "object",
        "properties" : {
          "api" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "387c2863-6ee3-4a56-8210-225f774edade"
              }
            }
          }
        }
      },
      "inline_response_200_4" : {
        "type" : "object",
        "properties" : {
          "versions" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "createdAt" : {
                  "type" : "string",
                  "example" : "2019-02-12 19:34:49"
                },
                "createdBy" : {
                  "type" : "string",
                  "example" : "5665"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Description"
                },
                "id" : {
                  "type" : "string",
                  "example" : "024660a6-c837-46ca-91d8-7e8dd7c669de"
                },
                "name" : {
                  "type" : "string",
                  "example" : "0.1"
                },
                "summary" : {
                  "type" : "string",
                  "example" : "Summary"
                },
                "updatedAt" : {
                  "type" : "string",
                  "example" : "2019-02-12 19:34:49"
                }
              }
            }
          }
        }
      },
      "apisapiIdversions_version_source_relations" : {
        "type" : "object",
        "properties" : {
          "documentation" : {
            "type" : "boolean",
            "example" : true
          },
          "mock" : {
            "type" : "boolean",
            "example" : true
          },
          "monitor" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "apisapiIdversions_version_source" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "{{apiVersionId}}"
          },
          "relations" : {
            "$ref" : "#/components/schemas/apisapiIdversions_version_source_relations"
          },
          "schema" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "apisapiIdversions_version" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "1.0"
          },
          "source" : {
            "$ref" : "#/components/schemas/apisapiIdversions_version_source"
          }
        }
      },
      "apiId_versions_body" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "$ref" : "#/components/schemas/apisapiIdversions_version"
          }
        }
      },
      "inline_response_200_5" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "object",
            "properties" : {
              "api" : {
                "type" : "string",
                "example" : "2b95d07c-8379-4bd1-924f-e7e1af185284"
              },
              "id" : {
                "type" : "string",
                "example" : "d71cf403-c549-4c7c-9dc6-a6a105acf67c"
              },
              "name" : {
                "type" : "string",
                "example" : "1.0"
              }
            }
          }
        }
      },
      "inline_response_200_6" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "object",
            "properties" : {
              "api" : {
                "type" : "string",
                "example" : "06e41ca3-8bea-4bc5-a726-70338b9f1940"
              },
              "createdAt" : {
                "type" : "string",
                "example" : "2019-07-21T16:31:15.000Z"
              },
              "createdBy" : {
                "type" : "string",
                "example" : "5665"
              },
              "id" : {
                "type" : "string",
                "example" : "03c17f53-7e2e-427d-b55a-006b244f29ff"
              },
              "name" : {
                "type" : "string",
                "example" : "0.1"
              },
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "example" : "3484cd1e-e00d-4c39-aea4-539663afe898"
                }
              },
              "updatedAt" : {
                "type" : "string",
                "example" : "2019-07-21T16:31:15.000Z"
              },
              "updatedBy" : {
                "type" : "string",
                "example" : "5665"
              }
            }
          }
        }
      },
      "apisapiIdversionsapiVersionId_version" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "2.0"
          }
        }
      },
      "versions_apiVersionId_body" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "$ref" : "#/components/schemas/apisapiIdversionsapiVersionId_version"
          }
        }
      },
      "inline_response_200_7" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "object",
            "properties" : {
              "api" : {
                "type" : "string",
                "example" : "2b95d07c-8379-4bd1-924f-e7e1af185284"
              },
              "createdAt" : {
                "type" : "string",
                "example" : "2019-07-26T11:24:15.000Z"
              },
              "createdBy" : {
                "type" : "string",
                "example" : "12"
              },
              "id" : {
                "type" : "string",
                "example" : "d71cf403-c549-4c7c-9dc6-a6a105acf67c"
              },
              "name" : {
                "type" : "string",
                "example" : "2.0"
              },
              "updatedAt" : {
                "type" : "string",
                "example" : "2019-08-09T09:27:36.000Z"
              },
              "updatedBy" : {
                "type" : "string",
                "example" : "5665"
              }
            }
          }
        }
      },
      "inline_response_200_8" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "03c17f53-7e2e-427d-b55a-006b244f29ff"
              }
            }
          }
        }
      },
      "inline_response_200_9" : {
        "type" : "object",
        "properties" : {
          "contracttest" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "collectionId" : {
                  "type" : "string",
                  "example" : "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745"
                },
                "id" : {
                  "type" : "string",
                  "example" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2"
                },
                "name" : {
                  "type" : "string",
                  "example" : "C test"
                },
                "updatedAt" : {
                  "type" : "string",
                  "example" : "2019-08-29T10:18:11.000Z"
                }
              }
            }
          }
        }
      },
      "inline_response_200_10" : {
        "type" : "object",
        "properties" : {
          "documentation" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "collectionId" : {
                  "type" : "string",
                  "example" : "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745"
                },
                "id" : {
                  "type" : "string",
                  "example" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2"
                },
                "name" : {
                  "type" : "string",
                  "example" : "C test"
                },
                "updatedAt" : {
                  "type" : "string",
                  "example" : "2019-08-29T10:18:11.000Z"
                }
              }
            }
          }
        }
      },
      "inline_response_200_11" : {
        "type" : "object",
        "properties" : {
          "environment" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2"
                },
                "name" : {
                  "type" : "string",
                  "example" : "C test"
                },
                "updatedAt" : {
                  "type" : "string",
                  "example" : "2019-08-29T10:18:11.000Z"
                }
              }
            }
          }
        }
      },
      "inline_response_200_12" : {
        "type" : "object",
        "properties" : {
          "integrationtest" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "collectionId" : {
                  "type" : "string",
                  "example" : "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745"
                },
                "id" : {
                  "type" : "string",
                  "example" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2"
                },
                "name" : {
                  "type" : "string",
                  "example" : "C test"
                },
                "updatedAt" : {
                  "type" : "string",
                  "example" : "2019-08-29T10:18:11.000Z"
                }
              }
            }
          }
        }
      },
      "inline_response_200_13" : {
        "type" : "object",
        "properties" : {
          "monitor" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2"
                },
                "monitorId" : {
                  "type" : "string",
                  "example" : "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745"
                },
                "name" : {
                  "type" : "string",
                  "example" : "C test"
                },
                "updatedAt" : {
                  "type" : "string",
                  "example" : "2019-08-29T10:18:11.000Z"
                }
              }
            }
          }
        }
      },
      "inline_response_200_14" : {
        "type" : "object",
        "properties" : {
          "relations" : {
            "type" : "object",
            "properties" : {
              "contracttest" : {
                "type" : "object",
                "properties" : {
                  "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "example" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2"
                      },
                      "name" : {
                        "type" : "string",
                        "example" : "C test"
                      },
                      "updatedAt" : {
                        "type" : "string",
                        "example" : "2019-08-29T10:18:11.000Z"
                      }
                    }
                  }
                }
              },
              "integrationtest" : {
                "type" : "object",
                "properties" : {
                  "521b0486-ab91-4d3a-9189-43c9380a0533" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "example" : "521b0486-ab91-4d3a-9189-43c9380a0533"
                      },
                      "name" : {
                        "type" : "string",
                        "example" : "C1"
                      },
                      "updatedAt" : {
                        "type" : "string",
                        "example" : "2019-08-29T11:40:39.000Z"
                      }
                    }
                  },
                  "a236b715-e682-460b-97b6-c1db24f7612e" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "example" : "a236b715-e682-460b-97b6-c1db24f7612e"
                      },
                      "name" : {
                        "type" : "string",
                        "example" : "C test"
                      },
                      "updatedAt" : {
                        "type" : "string",
                        "example" : "2019-08-29T10:18:11.000Z"
                      }
                    }
                  }
                }
              },
              "mock" : {
                "type" : "object",
                "properties" : {
                  "4ccd755f-2c80-481b-a262-49b55e12f5e1" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "example" : "4ccd755f-2c80-481b-a262-49b55e12f5e1"
                      },
                      "name" : {
                        "type" : "string",
                        "example" : "Mock"
                      },
                      "updatedAt" : {
                        "type" : "string",
                        "example" : "2019-08-20T10:18:13.000Z"
                      },
                      "url" : {
                        "type" : "string",
                        "example" : "https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "apiVersionId_relations_body" : {
        "type" : "object",
        "properties" : {
          "contracttest" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "collection-uid-1"
            }
          },
          "documentation" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "collection-uid-3"
            }
          },
          "mock" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "mock-uid-1"
            }
          },
          "testsuite" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "collection-uid-1"
            }
          }
        }
      },
      "inline_response_200_15" : {
        "type" : "object",
        "properties" : {
          "contracttest" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "5bcece87-ca4b-4e75-a967-2a6845626164"
            }
          },
          "documentation" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "2084eba6-a17b-4751-8f03-ea60f30ba19c"
            }
          },
          "testsuite" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "e525fa71-035e-4620-acda-ce878524f1e7"
            }
          }
        }
      },
      "apisapiIdversionsapiVersionIdschemas_schema" : {
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string",
            "example" : "yaml"
          },
          "schema" : {
            "type" : "string",
            "example" : "{\n  \"openapi\": \"3.0.0\",\n  \"info\": null,\n  \"version\": \"v1.0\",\n  \"title\": \"APi\",\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"Returns details about a particular user\",\n        \"operationId\": \"listUser\",\n        \"tags\": [\n          \"user\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"ID of the user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details about a user by ID\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\'#/components/schemas/User\\\\'\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\'#/components/schemas/Error\\\\'\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
          },
          "type" : {
            "type" : "string",
            "example" : "openapi3"
          }
        }
      },
      "apiVersionId_schemas_body" : {
        "type" : "object",
        "properties" : {
          "schema" : {
            "$ref" : "#/components/schemas/apisapiIdversionsapiVersionIdschemas_schema"
          }
        }
      },
      "inline_response_200_16" : {
        "type" : "object",
        "properties" : {
          "schema" : {
            "type" : "object",
            "properties" : {
              "apiVersion" : {
                "type" : "string",
                "example" : "ad810c39-df60-434e-a76f-a2192cd8d81f"
              },
              "createdAt" : {
                "type" : "string",
                "example" : "2019-02-12 19:34:49"
              },
              "createdBy" : {
                "type" : "string",
                "example" : "5665"
              },
              "id" : {
                "type" : "string",
                "example" : "e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822"
              },
              "language" : {
                "type" : "string",
                "example" : "yaml"
              },
              "type" : {
                "type" : "string",
                "example" : "openapi3"
              },
              "updateBy" : {
                "type" : "string",
                "example" : "5665"
              },
              "updatedAt" : {
                "type" : "string",
                "example" : "2019-02-12 19:34:49"
              }
            }
          }
        }
      },
      "apisapiIdversionsapiVersionIdschemasschemaId_schema" : {
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string",
            "example" : "json"
          },
          "schema" : {
            "type" : "string",
            "example" : "{\n  \"openapi\": \"3.0.0\",\n  \"info\": null,\n  \"version\": \"v1.0\",\n  \"title\": \"APi\",\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\"\n    }\n  ],\n  \"paths\": {\n    \"/user\": {\n      \"get\": {\n        \"summary\": \"Returns details about a particular user\",\n        \"operationId\": \"listUser\",\n        \"tags\": [\n          \"user\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"ID of the user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details about a user by ID\",\n            \"headers\": {\n              \"x-next\": {\n                \"description\": \"A link to the next page of responses\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\'#/components/schemas/User\\\\'\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"\\\\'#/components/schemas/Error\\\\'\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}"
          },
          "type" : {
            "type" : "string",
            "example" : "openapi3"
          }
        }
      },
      "schemas_schemaId_body" : {
        "type" : "object",
        "properties" : {
          "schema" : {
            "$ref" : "#/components/schemas/apisapiIdversionsapiVersionIdschemasschemaId_schema"
          }
        }
      },
      "apisapiIdversionsapiVersionIdschemasschemaIdcollections_relations" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "contracttest"
          }
        }
      },
      "schemaId_collections_body" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "My generated collection"
          },
          "relations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/apisapiIdversionsapiVersionIdschemasschemaIdcollections_relations"
            }
          }
        }
      },
      "inline_response_200_17" : {
        "type" : "object",
        "properties" : {
          "collection" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "e6b0d46a-8722-4f42-ab86-f5f473187ddf"
              },
              "uid" : {
                "type" : "string",
                "example" : "112098-e6b0d46a-8722-4f42-ab86-f5f473187ddf"
              }
            }
          },
          "relations" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "4b40f06a-5a6a-448f-bfcd-a6dbcb68da22"
                },
                "type" : {
                  "type" : "string",
                  "example" : "contracttest"
                }
              }
            }
          }
        }
      },
      "inline_response_200_18" : {
        "type" : "object",
        "properties" : {
          "testsuite" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "collectionId" : {
                  "type" : "string",
                  "example" : "7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745"
                },
                "id" : {
                  "type" : "string",
                  "example" : "2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2"
                },
                "name" : {
                  "type" : "string",
                  "example" : "C test"
                },
                "updatedAt" : {
                  "type" : "string",
                  "example" : "2019-08-29T10:18:11.000Z"
                }
              }
            }
          }
        }
      },
      "inline_response_200_19" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "inline_response_400" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "example" : "Unable to validate. Only the OpenAPI 3.0 schema format is supported."
              },
              "name" : {
                "type" : "string",
                "example" : "validationFailed"
              }
            }
          }
        }
      },
      "inline_response_200_20" : {
        "type" : "object",
        "properties" : {
          "collections" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "dac5eac9-148d-a32e-b76b-3edee9da28f7"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Cloud API"
                },
                "owner" : {
                  "type" : "string",
                  "example" : "631643"
                },
                "uid" : {
                  "type" : "string",
                  "example" : "631643-dac5eac9-148d-a32e-b76b-3edee9da28f7"
                }
              }
            }
          }
        }
      },
      "collections_collection_info" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "This is just a sample collection."
          },
          "name" : {
            "type" : "string",
            "example" : "Sample Collection {{$randomInt}}"
          },
          "schema" : {
            "type" : "string",
            "example" : "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        }
      },
      "collections_collection_request_body" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "type" : "string",
            "example" : "raw"
          },
          "raw" : {
            "type" : "string",
            "example" : "{\"data\": \"123\"}"
          }
        }
      },
      "collections_collection_request_header" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "example" : "Content-Type"
          },
          "value" : {
            "type" : "string",
            "example" : "application/json"
          }
        }
      },
      "collections_collection_request" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "$ref" : "#/components/schemas/collections_collection_request_body"
          },
          "description" : {
            "type" : "string",
            "example" : "This is a sample POST Request"
          },
          "header" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/collections_collection_request_header"
            }
          },
          "method" : {
            "type" : "string",
            "example" : "POST"
          },
          "url" : {
            "type" : "string",
            "example" : "https://postman-echo.com/post"
          }
        }
      },
      "collections_collection_item" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Sample POST Request"
          },
          "request" : {
            "$ref" : "#/components/schemas/collections_collection_request"
          }
        }
      },
      "collections_collection_item_1" : {
        "type" : "object",
        "properties" : {
          "item" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/collections_collection_item"
            }
          },
          "name" : {
            "type" : "string",
            "example" : "This is a folder"
          }
        }
      },
      "collections_collection" : {
        "type" : "object",
        "properties" : {
          "info" : {
            "$ref" : "#/components/schemas/collections_collection_info"
          },
          "item" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/collections_collection_item_1"
            }
          }
        }
      },
      "collections_body" : {
        "type" : "object",
        "properties" : {
          "collection" : {
            "$ref" : "#/components/schemas/collections_collection"
          }
        }
      },
      "inline_response_200_21" : {
        "type" : "object",
        "properties" : {
          "collection" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "2412a72c-1d8e-491b-aced-93809c0e94e9"
              },
              "name" : {
                "type" : "string",
                "example" : "Sample Collection"
              },
              "uid" : {
                "type" : "string",
                "example" : "5852-2412a72c-1d8e-491b-aced-93809c0e94e9"
              }
            }
          }
        }
      },
      "inline_response_400_1" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "example" : "Missing required property: name at info"
              },
              "name" : {
                "type" : "string",
                "example" : "malformedRequestError"
              }
            }
          }
        }
      },
      "fork_collection_uid_body" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Fork name"
          }
        }
      },
      "collections_merge_body" : {
        "type" : "object",
        "properties" : {
          "destination" : {
            "type" : "string",
            "example" : "{{destination_collection_uid}}"
          },
          "source" : {
            "type" : "string",
            "example" : "{{source_collection_uid}}"
          },
          "strategy" : {
            "type" : "string",
            "example" : "deleteSource"
          }
        }
      },
      "inline_response_200_22" : {
        "type" : "object",
        "properties" : {
          "collection" : {
            "type" : "object",
            "properties" : {
              "info" : {
                "type" : "object",
                "properties" : {
                  "_postman_id" : {
                    "type" : "string",
                    "example" : "f2e66c2e-5297-e4a5-739e-20cbb90900e3"
                  },
                  "description" : {
                    "type" : "string",
                    "example" : "This is a sample collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client."
                  },
                  "name" : {
                    "type" : "string",
                    "example" : "Sample Collection"
                  },
                  "schema" : {
                    "type" : "string",
                    "example" : "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
                  }
                }
              },
              "item" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "event" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "listen" : {
                            "type" : "string",
                            "example" : "test"
                          },
                          "script" : {
                            "type" : "object",
                            "properties" : {
                              "exec" : {
                                "type" : "string",
                                "example" : "var responseJSON;\ntry {\n    tests[\"Body contains headers\"] = responseBody.has(\"headers\");\n    responseJSON = JSON.parse(responseBody);\n    tests[\"Header contains host\"] = \"host\" in responseJSON.headers;\n    tests[\"Header contains test parameter sent as part of request header\"] = \"my-sample-header\" in responseJSON.headers;\n}\ncatch (e) { }\n\n\n\n"
                              },
                              "type" : {
                                "type" : "string",
                                "example" : "text/javascript"
                              }
                            }
                          }
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "example" : "82ee981b-e19f-962a-401e-ea34ebfb4848"
                    },
                    "name" : {
                      "type" : "string",
                      "example" : "Request Headers"
                    },
                    "request" : {
                      "type" : "object",
                      "properties" : {
                        "body" : {
                          "type" : "object",
                          "properties" : {
                            "formdata" : {
                              "type" : "array",
                              "items" : { }
                            },
                            "mode" : {
                              "type" : "string",
                              "example" : "formdata"
                            }
                          }
                        },
                        "description" : {
                          "type" : "string",
                          "example" : ""
                        },
                        "header" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "description" : {
                                "type" : "string",
                                "example" : ""
                              },
                              "key" : {
                                "type" : "string",
                                "example" : "my-sample-header"
                              },
                              "value" : {
                                "type" : "string",
                                "example" : "Lorem ipsum dolor sit amet"
                              }
                            }
                          }
                        },
                        "method" : {
                          "type" : "string",
                          "example" : "GET"
                        },
                        "url" : {
                          "type" : "string",
                          "example" : "https://echo.getpostman.com/headers"
                        }
                      }
                    },
                    "response" : {
                      "type" : "array",
                      "items" : { }
                    }
                  }
                }
              },
              "variables" : {
                "type" : "array",
                "items" : { }
              }
            }
          }
        }
      },
      "collectionscollection_uid_collection_info" : {
        "type" : "object",
        "properties" : {
          "_postman_id" : {
            "type" : "string",
            "example" : "174bad7c-07e3-45f3-914f-36cf84e5586f"
          },
          "description" : {
            "type" : "string",
            "example" : "This is just a sample collection."
          },
          "name" : {
            "type" : "string",
            "example" : "Sample Collection {{$randomInt}}"
          },
          "schema" : {
            "type" : "string",
            "example" : "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        }
      },
      "collectionscollection_uid_collection" : {
        "type" : "object",
        "properties" : {
          "info" : {
            "$ref" : "#/components/schemas/collectionscollection_uid_collection_info"
          },
          "item" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/collections_collection_item_1"
            }
          }
        }
      },
      "collections_collection_uid_body" : {
        "type" : "object",
        "properties" : {
          "collection" : {
            "$ref" : "#/components/schemas/collectionscollection_uid_collection"
          }
        }
      },
      "inline_response_200_23" : {
        "type" : "object",
        "properties" : {
          "collection" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "1d3daef4-2037-4584-ab86-bafd8c8f8a55"
              },
              "name" : {
                "type" : "string",
                "example" : "Sample Collection"
              },
              "uid" : {
                "type" : "string",
                "example" : "5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55"
              }
            }
          }
        }
      },
      "inline_response_400_2" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "example" : "The collection ID in the path does not match the collection ID in the request body."
              },
              "name" : {
                "type" : "string",
                "example" : "collectionMismatchError"
              }
            }
          }
        }
      },
      "inline_response_403" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "example" : "You do not have enough permissions to perform this action."
              },
              "name" : {
                "type" : "string",
                "example" : "forbiddenError"
              }
            }
          }
        }
      },
      "inline_response_404" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "details" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "example" : "1d3daef4-2037-4584-ab86-bafd8c8f8a54"
                  },
                  "item" : {
                    "type" : "string",
                    "example" : "collection"
                  }
                }
              },
              "message" : {
                "type" : "string",
                "example" : "The specified item does not exist."
              },
              "name" : {
                "type" : "string",
                "example" : "instanceNotFoundError"
              }
            }
          }
        }
      },
      "inline_response_200_24" : {
        "type" : "object",
        "properties" : {
          "collection" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "a14c6da7-afba-4a84-bf22-4febbaaced6c"
              },
              "uid" : {
                "type" : "string",
                "example" : "5852-a14c6da7-afba-4a84-bf22-4febbaaced6c"
              }
            }
          }
        }
      },
      "inline_response_404_1" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "details" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "example" : "a14c6da7-afba-4a84-bf22-4febbaaced6c"
                  },
                  "item" : {
                    "type" : "string",
                    "example" : "collection"
                  }
                }
              },
              "message" : {
                "type" : "string",
                "example" : "The specified item does not exist."
              },
              "name" : {
                "type" : "string",
                "example" : "instanceNotFoundError"
              }
            }
          }
        }
      },
      "inline_response_200_25" : {
        "type" : "object",
        "properties" : {
          "environments" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "357668d2-84f1-2264-438b-113095359f80"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Postman Cloud API"
                },
                "owner" : {
                  "type" : "string",
                  "example" : "631643"
                },
                "uid" : {
                  "type" : "string",
                  "example" : "631643-357668d2-84f1-2264-438b-113095359f80"
                }
              }
            }
          }
        }
      },
      "environments_environment_values" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "example" : "variable_name_1"
          },
          "value" : {
            "type" : "string",
            "example" : "The value of the variable"
          }
        }
      },
      "environments_environment" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Sample Environment Name (required)"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/environments_environment_values"
            }
          }
        }
      },
      "environments_body" : {
        "type" : "object",
        "properties" : {
          "environment" : {
            "$ref" : "#/components/schemas/environments_environment"
          }
        }
      },
      "inline_response_200_26" : {
        "type" : "object",
        "properties" : {
          "environment" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "f158266e-306b-4702-a2b9-e4ede7878b7a"
              },
              "name" : {
                "type" : "string",
                "example" : "Sample Environment Name (required)"
              },
              "uid" : {
                "type" : "string",
                "example" : "5665-f158266e-306b-4702-a2b9-e4ede7878b7a"
              }
            }
          }
        }
      },
      "inline_response_400_3" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "example" : "Missing required property: environment"
              },
              "name" : {
                "type" : "string",
                "example" : "malformedRequestError"
              }
            }
          }
        }
      },
      "inline_response_200_27" : {
        "type" : "object",
        "properties" : {
          "environment" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "84a119b6-f4b1-9120-5f11-a73b17818d70"
              },
              "name" : {
                "type" : "string",
                "example" : "Postman Cloud API.template"
              },
              "values" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "enabled" : {
                      "type" : "boolean",
                      "example" : true
                    },
                    "hovered" : {
                      "type" : "boolean",
                      "example" : false
                    },
                    "key" : {
                      "type" : "string",
                      "example" : "postman_api_key"
                    },
                    "type" : {
                      "type" : "string",
                      "example" : "text"
                    },
                    "value" : {
                      "type" : "string",
                      "example" : ""
                    }
                  }
                }
              }
            }
          }
        }
      },
      "environmentsenvironment_uid_environment_values" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "example" : "name"
          },
          "value" : {
            "type" : "string",
            "example" : "Bruce Wayne"
          }
        }
      },
      "environmentsenvironment_uid_environment" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "New Name"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/environmentsenvironment_uid_environment_values"
            }
          }
        }
      },
      "environments_environment_uid_body" : {
        "type" : "object",
        "properties" : {
          "environment" : {
            "$ref" : "#/components/schemas/environmentsenvironment_uid_environment"
          }
        }
      },
      "inline_response_200_28" : {
        "type" : "object",
        "properties" : {
          "environment" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "357668d2-84f1-2264-438b-113095359f80"
              },
              "name" : {
                "type" : "string",
                "example" : "New Name"
              },
              "uid" : {
                "type" : "string",
                "example" : "631643-357668d2-84f1-2264-438b-113095359f80"
              }
            }
          }
        }
      },
      "inline_response_400_4" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "example" : "Invalid type: null (expected object) at environment.values.0"
              },
              "name" : {
                "type" : "string",
                "example" : "malformedRequestError"
              }
            }
          }
        }
      },
      "inline_response_200_29" : {
        "type" : "object",
        "properties" : {
          "environment" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce"
              },
              "uid" : {
                "type" : "string",
                "example" : "5852-4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce"
              }
            }
          }
        }
      },
      "inline_response_404_2" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "example" : "The specified environment does not exist."
              },
              "name" : {
                "type" : "string",
                "example" : "instanceNotFoundError"
              }
            }
          }
        }
      },
      "inline_response_200_30" : {
        "type" : "object",
        "properties" : {
          "collections" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "b31be584-1b1e-4444-b581-761edf88fe77"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Swagger Petstore"
                },
                "uid" : {
                  "type" : "string",
                  "example" : "2282-b31be584-1b1e-4444-b581-761edf88fe77"
                }
              }
            }
          }
        }
      },
      "inline_response_400_5" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "details" : {
                "type" : "object",
                "properties" : {
                  "param" : {
                    "type" : "string",
                    "example" : "type"
                  }
                }
              },
              "message" : {
                "type" : "string",
                "example" : "The request body is missing a value for the type parameter. Check your request and try again."
              },
              "name" : {
                "type" : "string",
                "example" : "paramMissingError"
              }
            }
          }
        }
      },
      "importopenapi_input_info_license" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "MIT"
          }
        }
      },
      "importopenapi_input_info" : {
        "type" : "object",
        "properties" : {
          "license" : {
            "$ref" : "#/components/schemas/importopenapi_input_info_license"
          },
          "title" : {
            "type" : "string",
            "example" : "Swagger Petstore"
          },
          "version" : {
            "type" : "string",
            "example" : "1.0.0"
          }
        }
      },
      "importopenapi_input_paths_pets_get_schema" : {
        "type" : "object",
        "properties" : {
          "format" : {
            "type" : "string",
            "example" : "int32"
          },
          "type" : {
            "type" : "string",
            "example" : "integer"
          }
        }
      },
      "importopenapi_input_paths_pets_get_parameters" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "limit"
          },
          "in" : {
            "type" : "string",
            "example" : "query"
          },
          "name" : {
            "type" : "string",
            "example" : "limit"
          },
          "required" : {
            "type" : "boolean",
            "example" : false
          },
          "schema" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths_pets_get_schema"
          }
        }
      },
      "importopenapi_input_paths_pets_get_responses_default_content_applicationjson_schema_properties_message" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "string"
          }
        }
      },
      "importopenapi_input_paths_pets_get_responses_default_content_applicationjson_schema_properties" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths_pets_get_schema"
          },
          "message" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths_pets_get_responses_default_content_applicationjson_schema_properties_message"
          }
        }
      },
      "importopenapi_input_paths_pets_get_responses_default_content_applicationjson_schema" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths_pets_get_responses_default_content_applicationjson_schema_properties"
          },
          "required" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "code"
            }
          }
        }
      },
      "importopenapi_input_paths_pets_get_responses_default_content_applicationjson" : {
        "type" : "object",
        "properties" : {
          "schema" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths_pets_get_responses_default_content_applicationjson_schema"
          }
        }
      },
      "importopenapi_input_paths_pets_get_responses_default_content" : {
        "type" : "object",
        "properties" : {
          "application/json" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths_pets_get_responses_default_content_applicationjson"
          }
        }
      },
      "importopenapi_input_paths_pets_get_responses_default" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths_pets_get_responses_default_content"
          },
          "description" : {
            "type" : "string",
            "example" : "unexpected error"
          }
        }
      },
      "importopenapi_input_paths_pets_get_responses" : {
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths_pets_get_responses_default"
          }
        }
      },
      "importopenapi_input_paths_pets_get" : {
        "type" : "object",
        "properties" : {
          "operationId" : {
            "type" : "string",
            "example" : "listPets"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/importopenapi_input_paths_pets_get_parameters"
            }
          },
          "responses" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths_pets_get_responses"
          },
          "summary" : {
            "type" : "string",
            "example" : "List all pets"
          }
        }
      },
      "importopenapi_input_paths_pets" : {
        "type" : "object",
        "properties" : {
          "get" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths_pets_get"
          }
        }
      },
      "importopenapi_input_paths" : {
        "type" : "object",
        "properties" : {
          "/pets" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths_pets"
          }
        }
      },
      "importopenapi_input_servers" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "example" : "http://petstore.swagger.io/v1"
          }
        }
      },
      "importopenapi_input" : {
        "type" : "object",
        "properties" : {
          "info" : {
            "$ref" : "#/components/schemas/importopenapi_input_info"
          },
          "openapi" : {
            "type" : "string",
            "example" : "3.0.0"
          },
          "paths" : {
            "$ref" : "#/components/schemas/importopenapi_input_paths"
          },
          "servers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/importopenapi_input_servers"
            }
          }
        }
      },
      "import_openapi_body" : {
        "type" : "object",
        "properties" : {
          "input" : {
            "$ref" : "#/components/schemas/importopenapi_input"
          },
          "type" : {
            "type" : "string",
            "example" : "json"
          }
        }
      },
      "inline_response_200_31" : {
        "type" : "object",
        "properties" : {
          "operations" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "limit" : {
                  "type" : "number",
                  "example" : 1000000
                },
                "name" : {
                  "type" : "string",
                  "example" : "mock_usage"
                },
                "overage" : {
                  "type" : "number",
                  "example" : 0
                },
                "usage" : {
                  "type" : "number",
                  "example" : 2382
                }
              }
            }
          },
          "user" : {
            "type" : "object",
            "properties" : {
              "avatar" : {
                "type" : "string",
                "example" : "https://www.gravatar.com/avatar/e1f3994f2632af3d1c8c2dcc168a10e6"
              },
              "email" : {
                "type" : "string",
                "example" : "janedoe@example.com"
              },
              "fullName" : {
                "type" : "string",
                "example" : "Jane Doe"
              },
              "id" : {
                "type" : "string",
                "example" : "631643"
              },
              "isPublic" : {
                "type" : "boolean",
                "example" : false
              },
              "username" : {
                "type" : "string",
                "example" : "janedoe"
              }
            }
          }
        }
      },
      "inline_response_200_32" : {
        "type" : "object",
        "properties" : {
          "mocks" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "collection" : {
                  "type" : "string",
                  "example" : "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc"
                },
                "environment" : {
                  "type" : "string",
                  "example" : "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524"
                },
                "id" : {
                  "type" : "string",
                  "example" : "0fca2246-c108-41f5-8454-cc032def329f"
                },
                "mockUrl" : {
                  "type" : "string",
                  "example" : "https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io"
                },
                "owner" : {
                  "type" : "string",
                  "example" : "1679925"
                },
                "uid" : {
                  "type" : "string",
                  "example" : "1679925-0fca2246-c108-41f5-8454-cc032def329f"
                }
              }
            }
          }
        }
      },
      "mocks_mock" : {
        "type" : "object",
        "properties" : {
          "collection" : {
            "type" : "string",
            "example" : "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc"
          },
          "environment" : {
            "type" : "string",
            "example" : "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524"
          }
        }
      },
      "mocks_body" : {
        "type" : "object",
        "properties" : {
          "mock" : {
            "$ref" : "#/components/schemas/mocks_mock"
          }
        }
      },
      "inline_response_200_33" : {
        "type" : "object",
        "properties" : {
          "mock" : {
            "type" : "object",
            "properties" : {
              "collection" : {
                "type" : "string",
                "example" : "1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc"
              },
              "environment" : {
                "type" : "string",
                "example" : "1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524"
              },
              "id" : {
                "type" : "string",
                "example" : "0fca2246-c108-41f5-8454-cc032def329f"
              },
              "mockUrl" : {
                "type" : "string",
                "example" : "https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io"
              },
              "owner" : {
                "type" : "string",
                "example" : "1679925"
              },
              "uid" : {
                "type" : "string",
                "example" : "1679925-0fca2246-c108-41f5-8454-cc032def329f"
              }
            }
          }
        }
      },
      "mocksmock_uid_mock" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "example" : "example describing update mock description"
          },
          "environment" : {
            "type" : "string",
            "example" : "11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19"
          },
          "name" : {
            "type" : "string",
            "example" : "My Mock Server"
          },
          "private" : {
            "type" : "boolean",
            "example" : false
          },
          "versionTag" : {
            "type" : "string",
            "example" : "abf07d3d-f8ec-47d4-8015-9fe83078b4ec"
          }
        }
      },
      "mocks_mock_uid_body" : {
        "type" : "object",
        "properties" : {
          "mock" : {
            "$ref" : "#/components/schemas/mocksmock_uid_mock"
          }
        }
      },
      "inline_response_200_34" : {
        "type" : "object",
        "properties" : {
          "mock" : {
            "type" : "object",
            "properties" : {
              "collection" : {
                "type" : "string",
                "example" : "11582779-fd6797e2-de6b-4699-975c-85290e4c2499"
              },
              "config" : {
                "type" : "object",
                "properties" : {
                  "headers" : {
                    "type" : "array",
                    "items" : { }
                  },
                  "matchBody" : {
                    "type" : "boolean",
                    "example" : false
                  },
                  "matchQueryParams" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "matchWildcards" : {
                    "type" : "boolean",
                    "example" : true
                  }
                }
              },
              "environment" : {
                "type" : "string",
                "example" : "11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19"
              },
              "id" : {
                "type" : "string",
                "example" : "06040138-dd6b-4cce-9a02-7e1c1ab59723"
              },
              "mockUrl" : {
                "type" : "string",
                "example" : "https://06040138-dd6b-4cce-9a02-7e1c1ab59723.mock.pstmn.io"
              },
              "name" : {
                "type" : "string",
                "example" : "My Mock Server"
              },
              "owner" : {
                "type" : "string",
                "example" : "11582779"
              },
              "uid" : {
                "type" : "string",
                "example" : "11582779-06040138-dd6b-4cce-9a02-7e1c1ab59723"
              }
            }
          }
        }
      },
      "inline_response_200_35" : {
        "type" : "object",
        "properties" : {
          "mock" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "0fca2246-c108-41f5-8454-cc032def329f"
              },
              "uid" : {
                "type" : "string",
                "example" : "1679925-0fca2246-c108-41f5-8454-cc032def329f"
              }
            }
          }
        }
      },
      "inline_response_200_36" : {
        "type" : "object",
        "properties" : {
          "mock" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "06040138-dd6b-4cce-9a02-7e1c1ab59723"
              }
            }
          }
        }
      },
      "inline_response_200_37" : {
        "type" : "object",
        "properties" : {
          "monitors" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "1e6b6c77-2031-42d0-9948-76d7251b2dd1"
                },
                "name" : {
                  "type" : "string",
                  "example" : "Batman & Sherlock Holmes Monitor"
                },
                "owner" : {
                  "type" : "string",
                  "example" : "5852"
                },
                "uid" : {
                  "type" : "string",
                  "example" : "5852-1e6b6c77-2031-42d0-9948-76d7251b2dd1"
                }
              }
            }
          }
        }
      },
      "monitors_monitor_schedule" : {
        "type" : "object",
        "properties" : {
          "cron" : {
            "type" : "string",
            "example" : "0 0 * * *"
          },
          "timezone" : {
            "type" : "string",
            "example" : "Asia/Kolkata"
          }
        }
      },
      "monitors_monitor" : {
        "type" : "object",
        "properties" : {
          "collection" : {
            "type" : "string",
            "example" : "5852-8d05dd85-222c-1452-553b-e76a531b71ed"
          },
          "environment" : {
            "type" : "string",
            "example" : "5852-8a4c21ea-2a36-40d1-a82d-d717fac9d6ef"
          },
          "name" : {
            "type" : "string",
            "example" : "This is a Monitor Name"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/monitors_monitor_schedule"
          }
        }
      },
      "monitors_body" : {
        "type" : "object",
        "properties" : {
          "monitor" : {
            "$ref" : "#/components/schemas/monitors_monitor"
          }
        }
      },
      "inline_response_200_38" : {
        "type" : "object",
        "properties" : {
          "monitor" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "1e6b6dfd-7ba4-4590-9ee1-5948102d7797"
              },
              "name" : {
                "type" : "string",
                "example" : "Monitor Name"
              },
              "uid" : {
                "type" : "string",
                "example" : "5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797"
              }
            }
          }
        }
      },
      "inline_response_400_6" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "details" : {
                "type" : "object",
                "properties" : {
                  "param" : {
                    "type" : "string",
                    "example" : "monitor"
                  }
                }
              },
              "message" : {
                "type" : "string",
                "example" : "Parameter is missing in the request."
              },
              "name" : {
                "type" : "string",
                "example" : "paramMissingError"
              }
            }
          }
        }
      },
      "inline_response_200_39" : {
        "type" : "object",
        "properties" : {
          "monitor" : {
            "type" : "object",
            "properties" : {
              "collectionUid" : {
                "type" : "string",
                "example" : "5852-8d05dd85-222c-1452-553b-e76a531b71ed"
              },
              "distribution" : {
                "type" : "array",
                "items" : { }
              },
              "environmentUid" : {
                "type" : "string",
                "example" : "5851-8d05dd85-222c-1452-553b-e76a531b71ed"
              },
              "id" : {
                "type" : "string",
                "example" : "1e6b6cc1-c760-48e0-968f-4bfaeeae9af1"
              },
              "lastRun" : {
                "type" : "object",
                "properties" : {
                  "finishedAt" : {
                    "type" : "string",
                    "example" : "2020-03-25T15:45:31.340Z"
                  },
                  "startedAt" : {
                    "type" : "string",
                    "example" : "2020-03-25T15:45:29.218Z"
                  },
                  "stats" : {
                    "type" : "object",
                    "properties" : {
                      "assertions" : {
                        "type" : "object",
                        "properties" : {
                          "failed" : {
                            "type" : "number",
                            "example" : 1
                          },
                          "total" : {
                            "type" : "number",
                            "example" : 8
                          }
                        }
                      },
                      "requests" : {
                        "type" : "object",
                        "properties" : {
                          "total" : {
                            "type" : "number",
                            "example" : 4
                          }
                        }
                      }
                    }
                  },
                  "status" : {
                    "type" : "string",
                    "example" : "failed"
                  }
                }
              },
              "name" : {
                "type" : "string",
                "example" : "Postman Echo Monitor"
              },
              "notifications" : {
                "type" : "object",
                "properties" : {
                  "onError" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "email" : {
                          "type" : "string",
                          "example" : "john.appleseed@example.com"
                        }
                      }
                    }
                  },
                  "onFailure" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "email" : {
                          "type" : "string",
                          "example" : "john.appleseed@example.com"
                        }
                      }
                    }
                  }
                }
              },
              "options" : {
                "type" : "object",
                "properties" : {
                  "followRedirects" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "requestDelay" : {
                    "type" : "number",
                    "example" : 0
                  },
                  "requestTimeout" : {
                    "type" : "number",
                    "example" : 3000
                  },
                  "strictSSL" : {
                    "type" : "boolean",
                    "example" : true
                  }
                }
              },
              "owner" : {
                "type" : "string",
                "example" : "5852"
              },
              "schedule" : {
                "type" : "object",
                "properties" : {
                  "cron" : {
                    "type" : "string",
                    "example" : "0 0 * * * *"
                  },
                  "nextRun" : {
                    "type" : "string",
                    "example" : "2016-11-30T09:30:00.000Z"
                  },
                  "timezone" : {
                    "type" : "string",
                    "example" : "Asia/Calcutta"
                  }
                }
              },
              "uid" : {
                "type" : "string",
                "example" : "5852-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1"
              }
            }
          }
        }
      },
      "inline_response_404_3" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "example" : "The specified monitor does not exist."
              },
              "name" : {
                "type" : "string",
                "example" : "instanceNotFoundError"
              }
            }
          }
        }
      },
      "monitorsmonitor_uid_monitor_schedule" : {
        "type" : "object",
        "properties" : {
          "cron" : {
            "type" : "string",
            "example" : "*/5 * * * *"
          },
          "timezone" : {
            "type" : "string",
            "example" : "America/Chicago"
          }
        }
      },
      "monitorsmonitor_uid_monitor" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Updated Monitor Name"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/monitorsmonitor_uid_monitor_schedule"
          }
        }
      },
      "monitors_monitor_uid_body" : {
        "type" : "object",
        "properties" : {
          "monitor" : {
            "$ref" : "#/components/schemas/monitorsmonitor_uid_monitor"
          }
        }
      },
      "inline_response_200_40" : {
        "type" : "object",
        "properties" : {
          "monitor" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "1e6b6e2a-c2ad-4090-b750-0df4e6624352"
              },
              "name" : {
                "type" : "string",
                "example" : "Updated Monitor Name"
              },
              "uid" : {
                "type" : "string",
                "example" : "5852-1e6b6e2a-c2ad-4090-b750-0df4e6624352"
              }
            }
          }
        }
      },
      "inline_response_200_41" : {
        "type" : "object",
        "properties" : {
          "monitor" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "1e6b8957-35f9-42a0-8d2f-f03d7085b3d2"
              },
              "uid" : {
                "type" : "string",
                "example" : "5852-1e6b8957-35f9-42a0-8d2f-f03d7085b3d2"
              }
            }
          }
        }
      },
      "inline_response_200_42" : {
        "type" : "object",
        "properties" : {
          "run" : {
            "type" : "object",
            "properties" : {
              "executions" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "number",
                      "example" : 1
                    },
                    "item" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "example" : "b5e8d7dd-909c-4ba7-aef4-8609bc50b586"
                        },
                        "name" : {
                          "type" : "string",
                          "example" : "Sample POST Request"
                        }
                      }
                    },
                    "request" : {
                      "type" : "object",
                      "properties" : {
                        "body" : {
                          "type" : "object",
                          "properties" : {
                            "contentLength" : {
                              "type" : "number",
                              "example" : 18
                            },
                            "mode" : {
                              "type" : "string",
                              "example" : "raw"
                            }
                          }
                        },
                        "headers" : {
                          "type" : "object",
                          "properties" : {
                            "accept" : {
                              "type" : "string",
                              "example" : "*/*"
                            },
                            "accept-encoding" : {
                              "type" : "string",
                              "example" : "gzip, deflate"
                            },
                            "content-length" : {
                              "type" : "number",
                              "example" : 18
                            },
                            "content-type" : {
                              "type" : "string",
                              "example" : "application/json"
                            }
                          }
                        },
                        "method" : {
                          "type" : "string",
                          "example" : "POST"
                        },
                        "timestamp" : {
                          "type" : "string",
                          "example" : "2016-12-04T14:30:26.025Z"
                        },
                        "url" : {
                          "type" : "string",
                          "example" : "echo.getpostman.com/post"
                        }
                      }
                    },
                    "response" : {
                      "type" : "object",
                      "properties" : {
                        "body" : {
                          "type" : "object",
                          "properties" : {
                            "contentLength" : {
                              "type" : "number",
                              "example" : 298
                            }
                          }
                        },
                        "code" : {
                          "type" : "number",
                          "example" : 200
                        },
                        "headers" : {
                          "type" : "object",
                          "properties" : {
                            "connection" : {
                              "type" : "string",
                              "example" : "keep-alive"
                            },
                            "content-encoding" : {
                              "type" : "string",
                              "example" : "gzip"
                            },
                            "content-type" : {
                              "type" : "string",
                              "example" : "application/json"
                            },
                            "date" : {
                              "type" : "string",
                              "example" : "Sun, 04 Dec 2016 14:30:26 GMT"
                            },
                            "transfer-encoding" : {
                              "type" : "string",
                              "example" : "chunked"
                            }
                          }
                        },
                        "responseSize" : {
                          "type" : "number",
                          "example" : 298
                        },
                        "responseTime" : {
                          "type" : "number",
                          "example" : 26
                        }
                      }
                    }
                  }
                }
              },
              "failures" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "assertion" : {
                      "type" : "object",
                      "properties" : {
                        "Status code is 400" : {
                          "type" : "boolean",
                          "example" : false
                        }
                      }
                    },
                    "executionId" : {
                      "type" : "number",
                      "example" : 2
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Expected 'Status code is 400' to be truthy"
                    },
                    "name" : {
                      "type" : "string",
                      "example" : "AssertionError"
                    }
                  }
                }
              },
              "info" : {
                "type" : "object",
                "properties" : {
                  "collectionUid" : {
                    "type" : "string",
                    "example" : "5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55"
                  },
                  "finishedAt" : {
                    "type" : "string",
                    "example" : "2016-12-04T14:30:26.000Z"
                  },
                  "jobId" : {
                    "type" : "string",
                    "example" : "1e6ba2e3-1aaf-4c10-bd5f-905943284b2a"
                  },
                  "monitorId" : {
                    "type" : "string",
                    "example" : "1e6b8970-fd13-4480-b011-b3b3e3cd271d"
                  },
                  "name" : {
                    "type" : "string",
                    "example" : "Sample Collection monitor 1 #56"
                  },
                  "startedAt" : {
                    "type" : "string",
                    "example" : "2016-12-04T14:30:25.000Z"
                  },
                  "status" : {
                    "type" : "string",
                    "example" : "failed"
                  }
                }
              },
              "stats" : {
                "type" : "object",
                "properties" : {
                  "assertions" : {
                    "type" : "object",
                    "properties" : {
                      "failed" : {
                        "type" : "number",
                        "example" : 1
                      },
                      "total" : {
                        "type" : "number",
                        "example" : 1
                      }
                    }
                  },
                  "requests" : {
                    "type" : "object",
                    "properties" : {
                      "failed" : {
                        "type" : "number",
                        "example" : 1
                      },
                      "total" : {
                        "type" : "number",
                        "example" : 3
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "webhooks_webhook" : {
        "type" : "object",
        "properties" : {
          "collection" : {
            "type" : "string",
            "example" : "{{collection_id}}"
          },
          "name" : {
            "type" : "string",
            "example" : "{{webhook_name}}"
          }
        }
      },
      "webhooks_body" : {
        "type" : "object",
        "properties" : {
          "webhook" : {
            "$ref" : "#/components/schemas/webhooks_webhook"
          }
        }
      },
      "inline_response_200_43" : {
        "type" : "object",
        "properties" : {
          "workspaces" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "example" : "4e6d34c2-cfdb-4b33-8868-12a875bebda3"
                },
                "name" : {
                  "type" : "string",
                  "example" : "My Workspace"
                },
                "type" : {
                  "type" : "string",
                  "example" : "personal"
                }
              }
            }
          }
        }
      },
      "workspaces_workspace_collections" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
          },
          "name" : {
            "type" : "string",
            "example" : "Straw hats"
          },
          "uid" : {
            "type" : "string",
            "example" : "8154-e1fc3c38-a0b8-44a3-bd44-d753a96b2e9d"
          }
        }
      },
      "workspaces_workspace_environments" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "83a1aaa2-a204-4bd8-9b92-4d486918906b"
          },
          "name" : {
            "type" : "string",
            "example" : "env"
          },
          "uid" : {
            "type" : "string",
            "example" : "8154-83a1aaa2-a204-4bd8-9b92-4d486918906b"
          }
        }
      },
      "workspaces_workspace_mocks" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "cda672ef-1375-40e9-baee-e20ece8d7b65"
          }
        }
      },
      "workspaces_workspace_monitors" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "1e889bd2-3862-4be0-b2c2-9b1fe9673aec"
          }
        }
      },
      "workspaces_workspace" : {
        "type" : "object",
        "properties" : {
          "collections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/workspaces_workspace_collections"
            }
          },
          "description" : {
            "type" : "string",
            "example" : "Some description"
          },
          "environments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/workspaces_workspace_environments"
            }
          },
          "mocks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/workspaces_workspace_mocks"
            }
          },
          "monitors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/workspaces_workspace_monitors"
            }
          },
          "name" : {
            "type" : "string",
            "example" : "New Workspace"
          },
          "type" : {
            "type" : "string",
            "example" : "personal"
          }
        }
      },
      "workspaces_body" : {
        "type" : "object",
        "properties" : {
          "workspace" : {
            "$ref" : "#/components/schemas/workspaces_workspace"
          }
        }
      },
      "inline_response_200_44" : {
        "type" : "object",
        "properties" : {
          "workspace" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f"
              },
              "name" : {
                "type" : "string",
                "example" : "New Workspace"
              }
            }
          }
        }
      },
      "inline_response_400_7" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "example" : "Instance not found in the database."
              },
              "name" : {
                "type" : "string",
                "example" : "instanceNotFoundError"
              }
            }
          }
        }
      },
      "inline_response_200_45" : {
        "type" : "object",
        "properties" : {
          "workspace" : {
            "type" : "object",
            "properties" : {
              "collections" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "example" : "7c31b469-bd43-4411-9283-6d397855ee0e"
                    },
                    "name" : {
                      "type" : "string",
                      "example" : "Mock demo - collection"
                    },
                    "uid" : {
                      "type" : "string",
                      "example" : "1234-7c31b469-bd43-4411-9283-6d397855ee0e"
                    }
                  }
                }
              },
              "description" : {
                "type" : "string",
                "example" : "Demos."
              },
              "environments" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "example" : "423fd955-a9c8-47cd-9ab0-09a6a575c4be"
                    },
                    "name" : {
                      "type" : "string",
                      "example" : "Mock demo - CNX"
                    },
                    "uid" : {
                      "type" : "string",
                      "example" : "1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be"
                    }
                  }
                }
              },
              "id" : {
                "type" : "string",
                "example" : "f8801e9e-03a4-4c7b-b31e-5db5cd771696"
              },
              "name" : {
                "type" : "string",
                "example" : "Demo workspace"
              },
              "type" : {
                "type" : "string",
                "example" : "personal"
              }
            }
          }
        }
      },
      "workspacesworkspace_id_workspace" : {
        "type" : "object",
        "properties" : {
          "collections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/workspaces_workspace_collections"
            }
          },
          "description" : {
            "type" : "string",
            "example" : "Some description"
          },
          "environments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/workspaces_workspace_environments"
            }
          },
          "mocks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/workspaces_workspace_mocks"
            }
          },
          "monitors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/workspaces_workspace_monitors"
            }
          },
          "name" : {
            "type" : "string",
            "example" : "New Workspace updated"
          }
        }
      },
      "workspaces_workspace_id_body" : {
        "type" : "object",
        "properties" : {
          "workspace" : {
            "$ref" : "#/components/schemas/workspacesworkspace_id_workspace"
          }
        }
      },
      "inline_response_403_1" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "example" : "You do not have access to update this workspace."
              },
              "name" : {
                "type" : "string",
                "example" : "forbiddenError"
              }
            }
          }
        }
      },
      "inline_response_404_4" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "example" : "The specified workspace does not exist."
              },
              "name" : {
                "type" : "string",
                "example" : "instanceNotFoundError"
              }
            }
          }
        }
      },
      "inline_response_200_46" : {
        "type" : "object",
        "properties" : {
          "workspace" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "example" : "{{workspace_id}}"
              }
            }
          }
        }
      }
    }
  }
}